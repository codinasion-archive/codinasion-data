[{"title":"Binary Search","description":"Binary search is searching algorithm with which given a sorted array it is able to search for a target by repeatedly dividing the search interval in half making use of the fact that the array is sorted and achieving much lower time complexity compared to linear search.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/binary-search/binary-search.png","tags":["cs","c","cpp","go","jl","js","php","py","rs","java"],"slug":"binary-search"},{"title":"Bubble Sort","description":"Bubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/bubble-sort/bubble-sort.png","tags":["java"],"slug":"bubble-sort"},{"title":"Linear Search","description":"Linear search is the simplest searching algorithm. In Linear search, we simply traverse the list completely and match each element of the list with the target item, whose location is to be found. If the match is found, then the location of the item is returned. Otherwise, the algorithm returns NULL.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/linear-search/linear-search.png","tags":["cs","java","c","cpp","go","jl","js","php","py","rs"],"slug":"linear-search"},{"title":"Validate Palindrome String","description":"In Palindrome algorithm, we simply reverse the the input String. If the two strig are equals then return True, otherwise, the algorithm returns False.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/validate-palindrome/validate-palindrome.png","tags":["c","cpp","cs","go","jl","js","php","py","rs","java"],"slug":"validate-palindrome"}]