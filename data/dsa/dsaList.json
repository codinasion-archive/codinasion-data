[{"title":"Binary Search","description":"Taking in a sorted int array and a target return the index of the target value. Since the array is sorted we are able to compare our target value to the middle element of the array. If value matches target we can return the index otherwise we adjust the window depending on if it's less than or greater than element value.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/binary-search/binary-search.png","tags":["jpg","java"],"slug":"binary-search"},{"title":"Linear Search","description":"Linear search is the simplest searching algorithm. In Linear search, we simply traverse the list completely and match each element of the list with the target item, whose location is to be found. If the match is found, then the location of the item is returned. Otherwise, the algorithm returns NULL.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/linear-search/linear-search.png","tags":["cs","java","c","cpp","go","js","py"],"slug":"linear-search"},{"title":"Validate Palindrome String","description":"In Palindrome algorithm, we simply reverse the the input String. If the two strig are equals then return True, otherwise, the algorithm returns False.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/validate-palindrome/validate-palindrome.png","tags":["cpp","cs","go","js","py","java"],"slug":"validate-palindrome"}]