{"slug":"bubble-sort","title":"Bubble Sort","description":"Bubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order.","image":"https://raw.githubusercontent.com/codinasion/codinasion-dsa/master/programme/bubble-sort/bubble-sort.png","tags":["java","py","rs","jl"],"contributors":["9gl","John8790909","Peleg-Noam","JefvdA"],"latestUpdateDate":"2022-08-06T13:09:23Z","contentHtml":"<h2>Bubble Sort</h2>\n<p>Bubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order.</p>\n<pre><code>Input  : 14 33 27 35 10\nOutput : 10 14 27 33 35\n</code></pre>\n<pre><code>Time Complexity : O(n^2)\n</code></pre>\n<pre><code>Space Complexity : O(1)\n</code></pre>\n<hr>\n<pre><code>// Write a programme for bubble sort\n\nfn bubble_sort(mut arr: Vec&#x3C;i32>) {\n    let n = arr.len() - 1;\n    let mut sorted: bool = false;\n\n    while sorted == false {\n        sorted = true;\n        for i in 0..n {\n            if arr[i + 1] &#x3C; arr[i] {\n                sorted = false;\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i]);\n            }\n        }\n    }\n\n    // this prints out the value of arr after bubble_sort ðŸ¤¯\n    println!(\"After  Sort : {:?}\", arr)\n}\n\n// change this to pub main if used in a module\nfn main() {\n    let arr: Vec&#x3C;i32> = vec![21, 4, 1, 3, 9, 8, 25, 0, 6, 2];\n\n    // this prints out the value of arr before bubble_sort\n    println!(\"Before Sort : {:?}\", arr);\n    bubble_sort(arr);\n}\n\n</code></pre>\n<pre><code>// Write a programme for bubble sort\nimport java.util.Arrays;\n\npublic class BubbleSort {\n\n  public static void main(String[] args) {\n    int[] arr = { 14, 33, 27, 35, 10 };\n    System.out.println(\"Input  : \" + Arrays.toString(arr));\n    bubblesort(arr);\n    System.out.println(\"Output : \" + Arrays.toString(arr));\n  }\n\n  public static void bubblesort(int[] arr) {\n    int sz = arr.length;\n    boolean swapped = false;\n    for (int i = 0; i &#x3C; sz; i++) {\n      for (int j = 1; j &#x3C; sz - i; j++) {\n        if (arr[j] &#x3C; arr[j - 1]) {\n          int temp = arr[j];\n          arr[j] = arr[j - 1];\n          arr[j - 1] = temp;\n          swapped = true;\n        }\n      }\n      if (!swapped) break;\n    }\n  }\n}\n\n</code></pre>\n<pre><code># Write a programme for Bubble sort\n\nfunction sort!(array)\n    for i in length(array):-1:1\n        for j in 1:i-1\n            if array[j] > array[j + 1]\n                temp = array[j]\n                array[j] = array[j + 1]\n                array[j + 1] = temp\n            end\n        end\n    end\nend\n\narray = [15, 33, 27, 35, 10]\n\nprintln(\"Input  : \", array)\nsort!(array)\nprintln(\"Output : \", array)\n\n</code></pre>\n<pre><code># Write a programme for bubble sort\n\ndef bubble_sort(arr):\n\n    length = len(arr)\n    for i in range(length):\n        is_sorted = True\n        for j in range(length - 1):\n            if arr[j] > arr[j + 1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n                is_sorted = False\n\n        if is_sorted:\n            return arr\n\n\narr = [14, 33, 27, 35, 10]\n# convert integers to numbers, join them and print\nprint(\"Before Sort : \" + ' '.join(str(num) for num in arr))\n# convert integers to numbers, join them and print\nprint(\"After  Sort : \" + ' '.join(str(num) for num in bubble_sort(arr)))\n\n</code></pre>\n","markdown":"\n## Bubble Sort\n\nBubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order.\n\n```txt\nInput  : 14 33 27 35 10\nOutput : 10 14 27 33 35\n```\n\n```txt\nTime Complexity : O(n^2)\n```\n\n```txt\nSpace Complexity : O(1)\n```\n\n---\n\n\n<CodeBlock>\n        \n```rust\n// Write a programme for bubble sort\n\nfn bubble_sort(mut arr: Vec<i32>) {\n    let n = arr.len() - 1;\n    let mut sorted: bool = false;\n\n    while sorted == false {\n        sorted = true;\n        for i in 0..n {\n            if arr[i + 1] < arr[i] {\n                sorted = false;\n                (arr[i], arr[i + 1]) = (arr[i + 1], arr[i]);\n            }\n        }\n    }\n\n    // this prints out the value of arr after bubble_sort ðŸ¤¯\n    println!(\"After  Sort : {:?}\", arr)\n}\n\n// change this to pub main if used in a module\nfn main() {\n    let arr: Vec<i32> = vec![21, 4, 1, 3, 9, 8, 25, 0, 6, 2];\n\n    // this prints out the value of arr before bubble_sort\n    println!(\"Before Sort : {:?}\", arr);\n    bubble_sort(arr);\n}\n\n```\n                \n```java\n// Write a programme for bubble sort\nimport java.util.Arrays;\n\npublic class BubbleSort {\n\n  public static void main(String[] args) {\n    int[] arr = { 14, 33, 27, 35, 10 };\n    System.out.println(\"Input  : \" + Arrays.toString(arr));\n    bubblesort(arr);\n    System.out.println(\"Output : \" + Arrays.toString(arr));\n  }\n\n  public static void bubblesort(int[] arr) {\n    int sz = arr.length;\n    boolean swapped = false;\n    for (int i = 0; i < sz; i++) {\n      for (int j = 1; j < sz - i; j++) {\n        if (arr[j] < arr[j - 1]) {\n          int temp = arr[j];\n          arr[j] = arr[j - 1];\n          arr[j - 1] = temp;\n          swapped = true;\n        }\n      }\n      if (!swapped) break;\n    }\n  }\n}\n\n```\n                \n```julia\n# Write a programme for Bubble sort\n\nfunction sort!(array)\n    for i in length(array):-1:1\n        for j in 1:i-1\n            if array[j] > array[j + 1]\n                temp = array[j]\n                array[j] = array[j + 1]\n                array[j + 1] = temp\n            end\n        end\n    end\nend\n\narray = [15, 33, 27, 35, 10]\n\nprintln(\"Input  : \", array)\nsort!(array)\nprintln(\"Output : \", array)\n\n```\n                \n```python\n# Write a programme for bubble sort\n\ndef bubble_sort(arr):\n\n    length = len(arr)\n    for i in range(length):\n        is_sorted = True\n        for j in range(length - 1):\n            if arr[j] > arr[j + 1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n                is_sorted = False\n\n        if is_sorted:\n            return arr\n\n\narr = [14, 33, 27, 35, 10]\n# convert integers to numbers, join them and print\nprint(\"Before Sort : \" + ' '.join(str(num) for num in arr))\n# convert integers to numbers, join them and print\nprint(\"After  Sort : \" + ' '.join(str(num) for num in bubble_sort(arr)))\n\n```\n                \n</CodeBlock>\n          \n        "}