{"slug":"compound-interest-calculator","title":"Compound Interest Calculator","description":"Write a programme to calculate compound interest","tags":["cs","java","go","js","py","cpp","c"],"contributors":["theanorak","KikiManjaro","michal-markiewicz","ssavi-ict","rossilor95","MadhuS-1605"],"latestUpdateDate":"2022-07-02T09:22:10Z","contentHtml":"<h2>Write a programme to calculate compound interest</h2>\n<pre><code>Enter P : 100\r\nEnter T : 10\r\nEnter R : 10\r\n\r\nAmount : 259.37\r\nCompound Interest : 159.37\n</code></pre>\n<hr>\n<pre><code>// Write a programme to calculate compound interest\n#include &#x3C;iostream>\n#include &#x3C;cmath>\n\nusing namespace std;\n\nint main()\n{\n    int P, T, R;\n    cout &#x3C;&#x3C; \"Enter P : \";\n    cin >> P;\n    cout &#x3C;&#x3C; \"Enter T : \";\n    cin >> T;\n    cout &#x3C;&#x3C; \"Enter R : \";\n    cin >> R;\n\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\n    cout &#x3C;&#x3C; \"\\nAmount : \" &#x3C;&#x3C; A &#x3C;&#x3C; endl;\n    float C = A - P;\n    cout &#x3C;&#x3C; \"Compound Interest : \" &#x3C;&#x3C; C &#x3C;&#x3C; endl;\n}\n\n</code></pre>\n<pre><code>// Write a programme to calculate compound interest.\r\nimport java.util.Scanner;\r\n\r\npublic class CompoundInterest {\r\n\r\n  public static void main(String args[]) {\r\n    try (Scanner sc = new Scanner(System.in)) {\r\n      // Input from User\r\n      System.out.print(\"Enter Principle Amount : \");\r\n      double p = sc.nextInt();\r\n      System.out.print(\"Enter Time Period : \");\r\n      double t = sc.nextInt();\r\n      System.out.print(\"Enter Rate of Interest : \");\r\n      double r = sc.nextInt();\r\n\r\n      // output\r\n      double amount = (double) (p * Math.pow(1 + (r / 100), t));\r\n      System.out.println();\r\n      System.out.println(\"Amount : \" + Math.round(amount * 100.0) / 100.0);\r\n      System.out.println(\r\n        \"Compound Interest : \" + Math.round((amount - p) * 100.0) / 100.0\r\n      );\r\n    }\r\n  }\r\n}\r\n\n</code></pre>\n<pre><code>// Write a programme to calculate compound interest\n#include &#x3C;stdio.h>\n#include &#x3C;math.h>\n\nint main()\n{\n    int P, T, R;\n    printf(\"Enter P : \");\n    scanf(\"%d\", &#x26;P);\n    printf(\"Enter T : \");\n    scanf(\"%d\", &#x26;T);\n    printf(\"Enter R : \");\n    scanf(\"%d\", &#x26;R);\n\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\n    printf(\"\\nAmount : %.2f\\n\", A);\n    float C = A - P;\n    printf(\"Compound Interest : %.2f\\n\", C);\n\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme to calculate compound interest.\nusing System;\n\nnamespace Calculations\n{\n    public class CompoundInterest\n    {\n        public static decimal\n        ComputeFinalAmount(\n            decimal principalAmount,\n            float interestRate,\n            float time\n        )\n        {\n            return principalAmount *\n            (decimal) Math.Pow((1 + (interestRate / 100)), time);\n        }\n\n        public static decimal\n        ComputeCompoundInterest(\n            decimal principalAmount,\n            float interestRate,\n            float time\n        )\n        {\n            return ComputeFinalAmount(principalAmount, interestRate, time) -\n            principalAmount;\n        }\n\n        public static decimal GetDecimalInput(string instructions)\n        {\n            bool isInputValid;\n            decimal inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid =\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static float GetFloatInput(string instructions)\n        {\n            bool isInputValid;\n            float inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid =\n                    float.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static void Main()\n        {\n            decimal principalAmount =\n                GetDecimalInput(\"Enter the Principal Amount (A) : \");\n            float interestRate =\n                GetFloatInput(\"Enter the Time Period (T)      : \");\n            float time = GetFloatInput(\"Enter the Rate of Interest (R) : \");\n\n            decimal finalAmount =\n                ComputeFinalAmount(principalAmount, interestRate, time);\n            decimal compoundInterest =\n                ComputeCompoundInterest(principalAmount, interestRate, time);\n\n            Console.WriteLine();\n            Console.WriteLine(\"Amount : \" + Math.Round(finalAmount, 2));\n            Console\n                .WriteLine(\"Compound Interest : \" +\n                Math.Round(compoundInterest, 2));\n        }\n    }\n}\n\n</code></pre>\n<pre><code># Write a programme to calculate compound interest\r\n\r\n# Input from User\r\np = int(input(\"Enter Principle Amount : \"))\r\nt = int(input(\"Enter Time Period : \"))\r\nr = int(input(\"Enter Rate of Interest : \"))\r\n\r\n# output\r\nprint('Amount : ', (round((p*((1+(r/100))**t)), 2)))\r\nprint('Compound Interest : ', (round((p*((1+(r/100))**t)) - p, 2)))\r\n\n</code></pre>\n<pre><code>// Write a programme to calculate compound interest\n\nfunction calculateCompoundInterest(amount, time, rate) {\n  const finalAmount = amount * (1 + rate / 100) ** time;\n  console.log(\"Amount :\", finalAmount.toFixed(2));\n\n  const compoundInterest = finalAmount - amount;\n  return compoundInterest.toFixed(2);\n}\n\nlet amount = 100;\nlet time = 10;\nlet rate = 10;\n\nconsole.log(\n  \"Compound Interest :\",\n  calculateCompoundInterest(amount, time, rate)\n);\n\n</code></pre>\n<pre><code>// Write a programme to calculate compound interest\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar priciple, term, rate float64\n\tvar amount float64\n\tfmt.Print(\"Enter the Principle Amount : \")\n\tfmt.Scan(&#x26;priciple)\n\tfmt.Print(\"Enter the Term in Years : \")\n\tfmt.Scan(&#x26;term)\n\tfmt.Print(\"Enter the Intrest Rate : \")\n\tfmt.Scan(&#x26;rate)\n\n\tamount = math.Pow(1+rate/100, term) * priciple\n\tfmt.Println(\"\\nThe Amount is :\", math.Floor(amount*100)/100)\n\n\tintrest := amount - priciple\n\tfmt.Println(\"The Compound Intrest is :\", math.Floor(intrest*100)/100)\n}\n\n</code></pre>\n","markdown":"\r\n## Write a programme to calculate compound interest\r\n\r\n```txt\r\nEnter P : 100\r\nEnter T : 10\r\nEnter R : 10\r\n\r\nAmount : 259.37\r\nCompound Interest : 159.37\r\n```\r\n\r\n---\r\n\n\n<CodeBlock>\n        \n```cpp\n// Write a programme to calculate compound interest\n#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint main()\n{\n    int P, T, R;\n    cout << \"Enter P : \";\n    cin >> P;\n    cout << \"Enter T : \";\n    cin >> T;\n    cout << \"Enter R : \";\n    cin >> R;\n\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\n    cout << \"\\nAmount : \" << A << endl;\n    float C = A - P;\n    cout << \"Compound Interest : \" << C << endl;\n}\n\n```\n                \n```java\n// Write a programme to calculate compound interest.\r\nimport java.util.Scanner;\r\n\r\npublic class CompoundInterest {\r\n\r\n  public static void main(String args[]) {\r\n    try (Scanner sc = new Scanner(System.in)) {\r\n      // Input from User\r\n      System.out.print(\"Enter Principle Amount : \");\r\n      double p = sc.nextInt();\r\n      System.out.print(\"Enter Time Period : \");\r\n      double t = sc.nextInt();\r\n      System.out.print(\"Enter Rate of Interest : \");\r\n      double r = sc.nextInt();\r\n\r\n      // output\r\n      double amount = (double) (p * Math.pow(1 + (r / 100), t));\r\n      System.out.println();\r\n      System.out.println(\"Amount : \" + Math.round(amount * 100.0) / 100.0);\r\n      System.out.println(\r\n        \"Compound Interest : \" + Math.round((amount - p) * 100.0) / 100.0\r\n      );\r\n    }\r\n  }\r\n}\r\n\n```\n                \n```c\n// Write a programme to calculate compound interest\n#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int P, T, R;\n    printf(\"Enter P : \");\n    scanf(\"%d\", &P);\n    printf(\"Enter T : \");\n    scanf(\"%d\", &T);\n    printf(\"Enter R : \");\n    scanf(\"%d\", &R);\n\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\n    printf(\"\\nAmount : %.2f\\n\", A);\n    float C = A - P;\n    printf(\"Compound Interest : %.2f\\n\", C);\n\n    return 0;\n}\n\n```\n                \n```cs\n// Write a programme to calculate compound interest.\nusing System;\n\nnamespace Calculations\n{\n    public class CompoundInterest\n    {\n        public static decimal\n        ComputeFinalAmount(\n            decimal principalAmount,\n            float interestRate,\n            float time\n        )\n        {\n            return principalAmount *\n            (decimal) Math.Pow((1 + (interestRate / 100)), time);\n        }\n\n        public static decimal\n        ComputeCompoundInterest(\n            decimal principalAmount,\n            float interestRate,\n            float time\n        )\n        {\n            return ComputeFinalAmount(principalAmount, interestRate, time) -\n            principalAmount;\n        }\n\n        public static decimal GetDecimalInput(string instructions)\n        {\n            bool isInputValid;\n            decimal inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid =\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static float GetFloatInput(string instructions)\n        {\n            bool isInputValid;\n            float inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid =\n                    float.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static void Main()\n        {\n            decimal principalAmount =\n                GetDecimalInput(\"Enter the Principal Amount (A) : \");\n            float interestRate =\n                GetFloatInput(\"Enter the Time Period (T)      : \");\n            float time = GetFloatInput(\"Enter the Rate of Interest (R) : \");\n\n            decimal finalAmount =\n                ComputeFinalAmount(principalAmount, interestRate, time);\n            decimal compoundInterest =\n                ComputeCompoundInterest(principalAmount, interestRate, time);\n\n            Console.WriteLine();\n            Console.WriteLine(\"Amount : \" + Math.Round(finalAmount, 2));\n            Console\n                .WriteLine(\"Compound Interest : \" +\n                Math.Round(compoundInterest, 2));\n        }\n    }\n}\n\n```\n                \n```python\n# Write a programme to calculate compound interest\r\n\r\n# Input from User\r\np = int(input(\"Enter Principle Amount : \"))\r\nt = int(input(\"Enter Time Period : \"))\r\nr = int(input(\"Enter Rate of Interest : \"))\r\n\r\n# output\r\nprint('Amount : ', (round((p*((1+(r/100))**t)), 2)))\r\nprint('Compound Interest : ', (round((p*((1+(r/100))**t)) - p, 2)))\r\n\n```\n                \n```js\n// Write a programme to calculate compound interest\n\nfunction calculateCompoundInterest(amount, time, rate) {\n  const finalAmount = amount * (1 + rate / 100) ** time;\n  console.log(\"Amount :\", finalAmount.toFixed(2));\n\n  const compoundInterest = finalAmount - amount;\n  return compoundInterest.toFixed(2);\n}\n\nlet amount = 100;\nlet time = 10;\nlet rate = 10;\n\nconsole.log(\n  \"Compound Interest :\",\n  calculateCompoundInterest(amount, time, rate)\n);\n\n```\n                \n```go\n// Write a programme to calculate compound interest\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar priciple, term, rate float64\n\tvar amount float64\n\tfmt.Print(\"Enter the Principle Amount : \")\n\tfmt.Scan(&priciple)\n\tfmt.Print(\"Enter the Term in Years : \")\n\tfmt.Scan(&term)\n\tfmt.Print(\"Enter the Intrest Rate : \")\n\tfmt.Scan(&rate)\n\n\tamount = math.Pow(1+rate/100, term) * priciple\n\tfmt.Println(\"\\nThe Amount is :\", math.Floor(amount*100)/100)\n\n\tintrest := amount - priciple\n\tfmt.Println(\"The Compound Intrest is :\", math.Floor(intrest*100)/100)\n}\n\n```\n                \n</CodeBlock>\n          \n        "}