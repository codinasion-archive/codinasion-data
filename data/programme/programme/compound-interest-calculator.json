{"contentHtml":"<h2>Write a programme to calculate compound interest</h2>\n<pre><code>Enter P : 100\r\nEnter T : 10\r\nEnter R : 10\r\n\r\nAmount : 259.37\r\nCompound Interest : 159.37\n</code></pre>\n<hr>\n<pre><code># Input from User\r\np = int(input(\"Enter Principle Amount : \"))\r\nt = int(input(\"Enter Time Period : \"))\r\nr = int(input(\"Enter Rate of Interest : \"))\r\n\r\n# output\r\nprint('Amount : ', (round((p*((1+(r/100))**t)), 2)))\r\nprint('Compound Interest : ', (round((p*((1+(r/100))**t)) - p, 2)))\n</code></pre>\n<pre><code>import java.util.Scanner;\r\n\r\npublic class solution {\r\n    public static void main(String args[]) {\r\n        try (\r\n                Scanner sc = new Scanner(System.in)) {\r\n            // Input from User\r\n            System.out.print(\"Enter Principle Amount : \");\r\n            double p = sc.nextInt();\r\n            System.out.print(\"Enter Time Period : \");\r\n            double t = sc.nextInt();\r\n            System.out.print(\"Enter Rate of Interest : \");\r\n            double r = sc.nextInt();\r\n\r\n            // output\r\n            double amount = (double) (p * Math.pow(1 + (r / 100), t));\r\n            System.out.println();\r\n            System.out.println(\"Amount : \" + Math.round(amount * 100.0) / 100.0);\r\n            System.out.println(\"Compound Interest : \" + Math.round((amount - p) * 100.0) / 100.0);\r\n        }\r\n    }\r\n}\n</code></pre>\n<pre><code>function calculateCompoundInterest(amount, time, rate) {\r\n  const finalAmount = amount * (1 + rate / 100) ** time;\r\n  console.log(\"Amount :\", finalAmount.toFixed(2));\r\n\r\n  const compoundInterest = finalAmount - amount;\r\n  return compoundInterest.toFixed(2);\r\n}\r\n\r\nlet amount = 100;\r\nlet time = 10;\r\nlet rate = 10;\r\n\r\nconsole.log(\r\n  \"Compound Interest :\",\r\n  calculateCompoundInterest(amount, time, rate)\r\n);\n</code></pre>\n<pre><code>#include &#x3C;stdio.h>\r\n#include &#x3C;math.h>\r\n\r\nint main()\r\n{\r\n    int P, T, R;\r\n    printf(\"Enter P : \");\r\n    scanf(\"%d\", &#x26;P);\r\n    printf(\"Enter T : \");\r\n    scanf(\"%d\", &#x26;T);\r\n    printf(\"Enter R : \");\r\n    scanf(\"%d\", &#x26;R);\r\n\r\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\r\n    printf(\"\\nAmount : %.2f\\n\", A);\r\n    float C = A - P;\r\n    printf(\"Compound Interest : %.2f\\n\", C);\r\n\r\n    return 0;\r\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\r\n#include &#x3C;cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int P, T, R;\r\n    cout &#x3C;&#x3C; \"Enter P : \";\r\n    cin >> P;\r\n    cout &#x3C;&#x3C; \"Enter T : \";\r\n    cin >> T;\r\n    cout &#x3C;&#x3C; \"Enter R : \";\r\n    cin >> R;\r\n\r\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\r\n    cout &#x3C;&#x3C; \"\\nAmount : \" &#x3C;&#x3C; A &#x3C;&#x3C; endl;\r\n    float C = A - P;\r\n    cout &#x3C;&#x3C; \"Compound Interest : \" &#x3C;&#x3C; C &#x3C;&#x3C; endl;\r\n}\n</code></pre>\n<pre><code>using System;\r\n\r\nnamespace Calculations\r\n{\r\n    public class CompoundInterest\r\n    {\r\n        public static decimal\r\n        ComputeFinalAmount(\r\n            decimal principalAmount,\r\n            float interestRate,\r\n            float time\r\n        )\r\n        {\r\n            return principalAmount *\r\n            (decimal) Math.Pow((1 + (interestRate / 100)), time);\r\n        }\r\n\r\n        public static decimal\r\n        ComputeCompoundInterest(\r\n            decimal principalAmount,\r\n            float interestRate,\r\n            float time\r\n        )\r\n        {\r\n            return ComputeFinalAmount(principalAmount, interestRate, time) -\r\n            principalAmount;\r\n        }\r\n\r\n        public static decimal GetDecimalInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            decimal inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid =\r\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static float GetFloatInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            float inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid =\r\n                    float.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            decimal principalAmount =\r\n                GetDecimalInput(\"Enter the Principal Amount (A) : \");\r\n            float interestRate =\r\n                GetFloatInput(\"Enter the Time Period (T)      : \");\r\n            float time = GetFloatInput(\"Enter the Rate of Interest (R) : \");\r\n\r\n            decimal finalAmount =\r\n                ComputeFinalAmount(principalAmount, interestRate, time);\r\n            decimal compoundInterest =\r\n                ComputeCompoundInterest(principalAmount, interestRate, time);\r\n\r\n            Console.WriteLine();\r\n            Console.WriteLine(\"Amount : \" + Math.Round(finalAmount, 2));\r\n            Console\r\n                .WriteLine(\"Compound Interest : \" +\r\n                Math.Round(compoundInterest, 2));\r\n        }\r\n    }\r\n}\n</code></pre>\n","markdown":"\r\n## Write a programme to calculate compound interest\r\n\r\n```txt\r\nEnter P : 100\r\nEnter T : 10\r\nEnter R : 10\r\n\r\nAmount : 259.37\r\nCompound Interest : 159.37\r\n```\r\n\r\n---\r\n\r\n<CodeBlock>\r\n\r\n```python\r\n# Input from User\r\np = int(input(\"Enter Principle Amount : \"))\r\nt = int(input(\"Enter Time Period : \"))\r\nr = int(input(\"Enter Rate of Interest : \"))\r\n\r\n# output\r\nprint('Amount : ', (round((p*((1+(r/100))**t)), 2)))\r\nprint('Compound Interest : ', (round((p*((1+(r/100))**t)) - p, 2)))\r\n```\r\n\r\n```java\r\nimport java.util.Scanner;\r\n\r\npublic class solution {\r\n    public static void main(String args[]) {\r\n        try (\r\n                Scanner sc = new Scanner(System.in)) {\r\n            // Input from User\r\n            System.out.print(\"Enter Principle Amount : \");\r\n            double p = sc.nextInt();\r\n            System.out.print(\"Enter Time Period : \");\r\n            double t = sc.nextInt();\r\n            System.out.print(\"Enter Rate of Interest : \");\r\n            double r = sc.nextInt();\r\n\r\n            // output\r\n            double amount = (double) (p * Math.pow(1 + (r / 100), t));\r\n            System.out.println();\r\n            System.out.println(\"Amount : \" + Math.round(amount * 100.0) / 100.0);\r\n            System.out.println(\"Compound Interest : \" + Math.round((amount - p) * 100.0) / 100.0);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```javascript\r\nfunction calculateCompoundInterest(amount, time, rate) {\r\n  const finalAmount = amount * (1 + rate / 100) ** time;\r\n  console.log(\"Amount :\", finalAmount.toFixed(2));\r\n\r\n  const compoundInterest = finalAmount - amount;\r\n  return compoundInterest.toFixed(2);\r\n}\r\n\r\nlet amount = 100;\r\nlet time = 10;\r\nlet rate = 10;\r\n\r\nconsole.log(\r\n  \"Compound Interest :\",\r\n  calculateCompoundInterest(amount, time, rate)\r\n);\r\n```\r\n\r\n```c\r\n#include <stdio.h>\r\n#include <math.h>\r\n\r\nint main()\r\n{\r\n    int P, T, R;\r\n    printf(\"Enter P : \");\r\n    scanf(\"%d\", &P);\r\n    printf(\"Enter T : \");\r\n    scanf(\"%d\", &T);\r\n    printf(\"Enter R : \");\r\n    scanf(\"%d\", &R);\r\n\r\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\r\n    printf(\"\\nAmount : %.2f\\n\", A);\r\n    float C = A - P;\r\n    printf(\"Compound Interest : %.2f\\n\", C);\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int P, T, R;\r\n    cout << \"Enter P : \";\r\n    cin >> P;\r\n    cout << \"Enter T : \";\r\n    cin >> T;\r\n    cout << \"Enter R : \";\r\n    cin >> R;\r\n\r\n    float A = pow((1.0 + (R * 1.0) / 100), (T * 1.0)) * P;\r\n    cout << \"\\nAmount : \" << A << endl;\r\n    float C = A - P;\r\n    cout << \"Compound Interest : \" << C << endl;\r\n}\r\n```\r\n\r\n```cs\r\nusing System;\r\n\r\nnamespace Calculations\r\n{\r\n    public class CompoundInterest\r\n    {\r\n        public static decimal\r\n        ComputeFinalAmount(\r\n            decimal principalAmount,\r\n            float interestRate,\r\n            float time\r\n        )\r\n        {\r\n            return principalAmount *\r\n            (decimal) Math.Pow((1 + (interestRate / 100)), time);\r\n        }\r\n\r\n        public static decimal\r\n        ComputeCompoundInterest(\r\n            decimal principalAmount,\r\n            float interestRate,\r\n            float time\r\n        )\r\n        {\r\n            return ComputeFinalAmount(principalAmount, interestRate, time) -\r\n            principalAmount;\r\n        }\r\n\r\n        public static decimal GetDecimalInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            decimal inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid =\r\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static float GetFloatInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            float inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid =\r\n                    float.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            decimal principalAmount =\r\n                GetDecimalInput(\"Enter the Principal Amount (A) : \");\r\n            float interestRate =\r\n                GetFloatInput(\"Enter the Time Period (T)      : \");\r\n            float time = GetFloatInput(\"Enter the Rate of Interest (R) : \");\r\n\r\n            decimal finalAmount =\r\n                ComputeFinalAmount(principalAmount, interestRate, time);\r\n            decimal compoundInterest =\r\n                ComputeCompoundInterest(principalAmount, interestRate, time);\r\n\r\n            Console.WriteLine();\r\n            Console.WriteLine(\"Amount : \" + Math.Round(finalAmount, 2));\r\n            Console\r\n                .WriteLine(\"Compound Interest : \" +\r\n                Math.Round(compoundInterest, 2));\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n</CodeBlock>\r\n","frontMatter":{"slug":"compound-interest-calculator","title":"Compound Interest Calculator","description":"Write a programme to calculate compound interest","image":"https://raw.githubusercontent.com/codinasion/codinasion-programme/master/programme/compound-interest-calculator/hero.png","tags":["python","java","js","c","cpp","cs"],"contributors":["theanorak","KikiManjaro","michal-markiewicz","ssavi-ict","rossilor95"]}}