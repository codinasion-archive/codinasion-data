{"slug":"add-two-numbers","title":"Add two numbers","description":"Write a programme to add two numbers","tags":["java","c","cpp","cs","go","jl","js","php","py","rs"],"contributors":["harshi1122","Mrczarny","ramanand-rv","VSen910","GodKimba","ClasherKasten","kvaithin","0xRenegade","SanjayShetty01"],"latestUpdateDate":"2022-07-31T07:51:41Z","contentHtml":"<h2>Write a programme to add two numbers</h2>\n<pre><code>Input  : 5 4\nOutput : 9\n</code></pre>\n<hr>\n<pre><code># Write a programme to add two numbers\n\n# getting and reading the input\nprint(\"Input : \")\nx, y = split(readline())\n\nx = parse(Int32, x)\ny = parse(Int32, y)\n\nprintln(\"Sum : \", x + y)\n\n</code></pre>\n<pre><code>// Write a programme to add two numbers\n#include &#x3C;bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n  int a, b;\n\n  // input\n  cout &#x3C;&#x3C; \"Enter numbers : \";\n  cin >> a >> b;\n\n  // Calculate\n  int sum = a + b;\n\n  // output area\n  cout &#x3C;&#x3C; endl;\n  cout &#x3C;&#x3C; \"Sum of numbers: \" &#x3C;&#x3C; sum &#x3C;&#x3C; endl;\n\n  return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme to add two numbers\n\n\"use strict\";\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nrl.question(\"Please enter the first number   : \", (firstNumber) => {\n  rl.question(\"Please enter the second number  : \", (secondNumber) => {\n    const result = parseInt(firstNumber) + parseInt(secondNumber);\n    if (isNaN(result)) {\n      console.log(`You've entered non numerical values. Pls try again.`);\n    } else {\n      console.log(`\\nThe sum of above two numbers is : ${result}`);\n    }\n    rl.close();\n  });\n});\n\n</code></pre>\n<pre><code>// Write a programme to add two numbers\n\nimport java.util.Scanner;\n\npublic class AddTwoNumbers {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a, b;\n\n        System.out.print(\"Enter two numbers to add : \");\n        a = sc.nextInt();\n        b = sc.nextInt();\n\n        int sum = a + b;\n        System.out.println(\"\\nThe sum of numbers is : \" + sum);\n\n        sc.close();\n    }\n}\n\n</code></pre>\n<pre><code>// Write a programme to add two numbers\nuse std::io::{self, Write};\n\nfn main() {\n    // Read user input\n    print!(\"Enter first number  : \");\n    let mut first_number = String::new();\n    let _ = io::stdout().flush();\n    io::stdin()\n        .read_line(&#x26;mut first_number)\n        .expect(\"Unable to read entered data\");\n\n    // Read user input\n    print!(\"Enter second number : \");\n    let mut second_number = String::new();\n    let _ = io::stdout().flush();\n    io::stdin()\n        .read_line(&#x26;mut second_number)\n        .expect(\"Unable to read entered data\");\n\n    // Convert string to integer\n    let a: f32 = first_number\n        .trim()\n        .parse()\n        .ok()\n        .expect(\"programme only processes numbers, Enter number\");\n    let b: f32 = second_number\n        .trim()\n        .parse()\n        .ok()\n        .expect(\"programme only processes numbers, Enter number\");\n\n    let sum = a + b;\n    // Output of basic operations\n    println!(\"\\n{} + {} = {}\", a, b, sum);\n}\n\n</code></pre>\n<pre><code>// Write a programme to add two numbers\npackage main\n\nimport \"fmt\"\n\n// This function receives two variables of type int\n// and then returns an int type\nfunc AddTwoNumbers(x, y int) int {\n\treturn x + y\n}\n\nfunc main() {\n\t// Declaring x, y and sum variables of type int\n\tvar x int\n\tvar y int\n\tvar sum int\n\n\t// Scanln -> to get the input from user\n\tfmt.Print(\"Enter the first number  : \")\n\n\t// Here the &#x26; is a way to access the previous declared variable\n\t// Simply speaking, it associate's the input value to the variable\n\tfmt.Scanln(&#x26;x)\n\n\tfmt.Print(\"Enter the second number : \")\n\tfmt.Scanln(&#x26;y)\n\n\tsum = AddTwoNumbers(x, y)\n\n\t// Here the Printf(ormat) is to format the string\n\t// with the variables values\n\t// %d is for formatting some types of ints\n\tfmt.Printf(\"\\nThe sum of %d and %d is : %d\\n\", x, y, sum)\n}\n\n</code></pre>\n<pre><code># Write a programme to add two numbers\n\nx, y = input(\"Enter two numbers: \").split()\n\nprint(\"Sum of numbers : \", int(x)+int(y))\n\n</code></pre>\n<pre><code>&#x3C;?php\n// Write a programme to add two numbers\n\nfunction sum(int|float $one, int|float $two) {\n\n    if (!is_numeric($one)) {\n\n        return 'Invalid input: Input 1 is not a number';\n\n    }\n\n    if (!is_numeric($two)) {\n\n        return 'Invalid input: Input 2 is not a number';\n\n    }\n\n    return $one + $two;\n\n}\n\n$one = readline(\"Enter the first number  : \");\n$two = readline(\"Enter the second number : \");\n\n$sum = sum($one, $two);\n\nprint \"\\nFirst Number  : {$one}\";\nprint \"\\nSecond Number : {$two}\";\nprint \"\\nSum: {$sum}\\n\";\n?>\n\n</code></pre>\n<pre><code>// Write a programme to add two numbers\nusing System;\n\npublic class AddTwo\n{\n    static void Main(string[] args)\n    {\n        int AddTwo(string input)\n        {\n            var sAr = input.Split(\" \");\n            return int.Parse(sAr[0]) + int.Parse(sAr[1]);\n        }\n\n        // Input numbers\n        Console.Write(\"Enter numbers : \");\n        string input = Console.ReadLine();\n\n        // output sum of numbers\n        Console.WriteLine(\"Sum : \" + AddTwo(input));\n    }\n}\n\n</code></pre>\n<pre><code>// Write a programme to add two numbers\n#include &#x3C;stdio.h>\n\nint main(void)\n{\n    int a, b;\n    printf(\"Enter two numbers : \");\n    scanf(\"%d %d\", &#x26;a, &#x26;b);\n\n    int sum = a + b;\n\n    printf(\"\\n%d + %d = %d\\n\", a, b, sum);\n    return 0;\n}\n\n</code></pre>\n","markdown":"\n## Write a programme to add two numbers\n\n```txt\nInput  : 5 4\nOutput : 9\n```\n\n---\n\n\n<CodeBlock>\n        \n```julia\n# Write a programme to add two numbers\n\n# getting and reading the input\nprint(\"Input : \")\nx, y = split(readline())\n\nx = parse(Int32, x)\ny = parse(Int32, y)\n\nprintln(\"Sum : \", x + y)\n\n```\n                \n```cpp\n// Write a programme to add two numbers\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n  int a, b;\n\n  // input\n  cout << \"Enter numbers : \";\n  cin >> a >> b;\n\n  // Calculate\n  int sum = a + b;\n\n  // output area\n  cout << endl;\n  cout << \"Sum of numbers: \" << sum << endl;\n\n  return 0;\n}\n\n```\n                \n```js\n// Write a programme to add two numbers\n\n\"use strict\";\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nrl.question(\"Please enter the first number   : \", (firstNumber) => {\n  rl.question(\"Please enter the second number  : \", (secondNumber) => {\n    const result = parseInt(firstNumber) + parseInt(secondNumber);\n    if (isNaN(result)) {\n      console.log(`You've entered non numerical values. Pls try again.`);\n    } else {\n      console.log(`\\nThe sum of above two numbers is : ${result}`);\n    }\n    rl.close();\n  });\n});\n\n```\n                \n```java\n// Write a programme to add two numbers\n\nimport java.util.Scanner;\n\npublic class AddTwoNumbers {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a, b;\n\n        System.out.print(\"Enter two numbers to add : \");\n        a = sc.nextInt();\n        b = sc.nextInt();\n\n        int sum = a + b;\n        System.out.println(\"\\nThe sum of numbers is : \" + sum);\n\n        sc.close();\n    }\n}\n\n```\n                \n```rust\n// Write a programme to add two numbers\nuse std::io::{self, Write};\n\nfn main() {\n    // Read user input\n    print!(\"Enter first number  : \");\n    let mut first_number = String::new();\n    let _ = io::stdout().flush();\n    io::stdin()\n        .read_line(&mut first_number)\n        .expect(\"Unable to read entered data\");\n\n    // Read user input\n    print!(\"Enter second number : \");\n    let mut second_number = String::new();\n    let _ = io::stdout().flush();\n    io::stdin()\n        .read_line(&mut second_number)\n        .expect(\"Unable to read entered data\");\n\n    // Convert string to integer\n    let a: f32 = first_number\n        .trim()\n        .parse()\n        .ok()\n        .expect(\"programme only processes numbers, Enter number\");\n    let b: f32 = second_number\n        .trim()\n        .parse()\n        .ok()\n        .expect(\"programme only processes numbers, Enter number\");\n\n    let sum = a + b;\n    // Output of basic operations\n    println!(\"\\n{} + {} = {}\", a, b, sum);\n}\n\n```\n                \n```go\n// Write a programme to add two numbers\npackage main\n\nimport \"fmt\"\n\n// This function receives two variables of type int\n// and then returns an int type\nfunc AddTwoNumbers(x, y int) int {\n\treturn x + y\n}\n\nfunc main() {\n\t// Declaring x, y and sum variables of type int\n\tvar x int\n\tvar y int\n\tvar sum int\n\n\t// Scanln -> to get the input from user\n\tfmt.Print(\"Enter the first number  : \")\n\n\t// Here the & is a way to access the previous declared variable\n\t// Simply speaking, it associate's the input value to the variable\n\tfmt.Scanln(&x)\n\n\tfmt.Print(\"Enter the second number : \")\n\tfmt.Scanln(&y)\n\n\tsum = AddTwoNumbers(x, y)\n\n\t// Here the Printf(ormat) is to format the string\n\t// with the variables values\n\t// %d is for formatting some types of ints\n\tfmt.Printf(\"\\nThe sum of %d and %d is : %d\\n\", x, y, sum)\n}\n\n```\n                \n```python\n# Write a programme to add two numbers\n\nx, y = input(\"Enter two numbers: \").split()\n\nprint(\"Sum of numbers : \", int(x)+int(y))\n\n```\n                \n```php\n<?php\n// Write a programme to add two numbers\n\nfunction sum(int|float $one, int|float $two) {\n\n    if (!is_numeric($one)) {\n\n        return 'Invalid input: Input 1 is not a number';\n\n    }\n\n    if (!is_numeric($two)) {\n\n        return 'Invalid input: Input 2 is not a number';\n\n    }\n\n    return $one + $two;\n\n}\n\n$one = readline(\"Enter the first number  : \");\n$two = readline(\"Enter the second number : \");\n\n$sum = sum($one, $two);\n\nprint \"\\nFirst Number  : {$one}\";\nprint \"\\nSecond Number : {$two}\";\nprint \"\\nSum: {$sum}\\n\";\n?>\n\n```\n                \n```cs\n// Write a programme to add two numbers\nusing System;\n\npublic class AddTwo\n{\n    static void Main(string[] args)\n    {\n        int AddTwo(string input)\n        {\n            var sAr = input.Split(\" \");\n            return int.Parse(sAr[0]) + int.Parse(sAr[1]);\n        }\n\n        // Input numbers\n        Console.Write(\"Enter numbers : \");\n        string input = Console.ReadLine();\n\n        // output sum of numbers\n        Console.WriteLine(\"Sum : \" + AddTwo(input));\n    }\n}\n\n```\n                \n```c\n// Write a programme to add two numbers\n#include <stdio.h>\n\nint main(void)\n{\n    int a, b;\n    printf(\"Enter two numbers : \");\n    scanf(\"%d %d\", &a, &b);\n\n    int sum = a + b;\n\n    printf(\"\\n%d + %d = %d\\n\", a, b, sum);\n    return 0;\n}\n\n```\n                \n</CodeBlock>\n          \n        "}