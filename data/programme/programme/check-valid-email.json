{"slug":"check-valid-email","title":"Check valid email address","description":"Write a programme to check a valid email address","tags":["cs","js"],"contributors":["anastazir","fadyfayek11"],"latestUpdateDate":"2022-07-26T03:47:19Z","contentHtml":"<h2>Write a programme to check a valid email address</h2>\n<p>Acceptable email prefix formats</p>\n<ul>\n<li>Allowed characters: letters (a-z), numbers, underscores, periods, and dashes.</li>\n<li>An underscore, period, or dash must be followed by one or more letter or number.</li>\n</ul>\n<pre><code>Input  : abc-d@mail.com\nOutput : valid\n</code></pre>\n<hr>\n<pre><code>// Write a programme to check a valid email address\n\nfunction isValidEmail(email) {\n    const re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (email.match(re)) {\n      return true;\n    }\n    return false;\n  }\n  \n  const email = \"test@gmail.com\";\n  \n  console.log(\"Input  :\", email);\n  console.log(\"Output :\", isValidEmail(email) ? \"valid\" : \"invalid\");\n  \n</code></pre>\n<pre><code>// Write a programme to check a valid email address\nusing System;\nusing System.Text.RegularExpressions;\n\npublic class EmailValidator\n{\n    public static bool IsValid(string email)\n    {\n        string regex =\n            @\"^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([azA-Z]{2,4}|[0-9]{1,3})(\\]?)$\";\n\n        return Regex.IsMatch(email, regex, RegexOptions.IgnoreCase);\n    }\n\n    public static void Main()\n    {\n        string email = \"abc@mail.com\";\n        Console.WriteLine(\"Input  : {0}\", email);\n\n        Console.WriteLine(\"Output : {0}\", IsValid(email) ? \"Valid\" : \"Invalid\");\n    }\n}\n\n</code></pre>\n","markdown":"\n## Write a programme to check a valid email address\n\nAcceptable email prefix formats\n\n- Allowed characters: letters (a-z), numbers, underscores, periods, and dashes.\n- An underscore, period, or dash must be followed by one or more letter or number.\n\n```txt\nInput  : abc-d@mail.com\nOutput : valid\n```\n\n---\n\n\n<CodeBlock>\n        \n```js\n// Write a programme to check a valid email address\n\nfunction isValidEmail(email) {\n    const re = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (email.match(re)) {\n      return true;\n    }\n    return false;\n  }\n  \n  const email = \"test@gmail.com\";\n  \n  console.log(\"Input  :\", email);\n  console.log(\"Output :\", isValidEmail(email) ? \"valid\" : \"invalid\");\n  \n```\n                \n```cs\n// Write a programme to check a valid email address\nusing System;\nusing System.Text.RegularExpressions;\n\npublic class EmailValidator\n{\n    public static bool IsValid(string email)\n    {\n        string regex =\n            @\"^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([azA-Z]{2,4}|[0-9]{1,3})(\\]?)$\";\n\n        return Regex.IsMatch(email, regex, RegexOptions.IgnoreCase);\n    }\n\n    public static void Main()\n    {\n        string email = \"abc@mail.com\";\n        Console.WriteLine(\"Input  : {0}\", email);\n\n        Console.WriteLine(\"Output : {0}\", IsValid(email) ? \"Valid\" : \"Invalid\");\n    }\n}\n\n```\n                \n</CodeBlock>\n          \n        "}