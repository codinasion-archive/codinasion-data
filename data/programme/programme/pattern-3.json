{"slug":"pattern-3","title":"Print Pattern 3","description":"Write a programme to print the given pattern","tags":["c","js","py"],"contributors":["seraph776","ClasherKasten"],"latestUpdateDate":"2022-07-05T15:31:30Z","contentHtml":"<h2>Write a python programme to print the given pattern</h2>\n<pre><code>Input  : 5\nOutput :\n\nx x x x x\nx       x\nx       x\nx       x\nx x x x x\n</code></pre>\n<hr>\n<pre><code># Write a Python programme to print the given pattern\n\ndef print_pattern(n: int) -> None:\n    print(\"Output : \\n\")\n    for col in range(n):\n        for row in range(n):\n            if col == 0 or col == n - 1 or row == 0 or row == n - 1:\n                print(' * ', end='')\n            else:\n                print('   ', end='')\n        print()\n\n\nn = int(input(\"input  : \"))\nprint_pattern(n)\n\n</code></pre>\n<pre><code>// Write a python programme to print the given pattern\n#include &#x3C;stdio.h>\n\n#define BOUNDARY_STR (\"x\")\n\nvoid pattern(int n)\n{\n    for (int i = 0; i &#x3C; n - 1; i++)\n    {\n        printf(\"%s \", BOUNDARY_STR);\n    }\n    printf(\"%s\\n\", BOUNDARY_STR);\n    for (int i = 0; i &#x3C; n - 2; i++)\n    {\n        printf(BOUNDARY_STR);\n        for (int i = 0; i &#x3C; n - 2; i++)\n        {\n            printf(\"  \");\n        }\n        printf(\" %s\\n\", BOUNDARY_STR);\n    }\n    if (n != 1)\n    {\n        for (int i = 0; i &#x3C; n - 1; i++)\n        {\n            printf(\"%s \", BOUNDARY_STR);\n        }\n        printf(\"%s\\n\", BOUNDARY_STR);\n    }\n}\n\nint main(void)\n{\n    int n;\n    printf(\"Input : \");\n    scanf(\"%d\", &#x26;n);\n    pattern(n);\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a python programme to print the given pattern\n\n\"use strict\";\n\n// perform following command to run programme\n// node pattern-3.js\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nfunction pattern(n) {\n  for (let i = 0; i &#x3C; n - 1; i++) {\n    rl.write(\"x \");\n  }\n  rl.write(\"x\\n\");\n  for (let i = 0; i &#x3C; n - 2; i++) {\n    rl.write(\"x\");\n    for (let i = 0; i &#x3C; n - 2; i++) {\n      rl.write(\"  \");\n    }\n    rl.write(\" x\\n\");\n  }\n  if (n != 1) {\n    for (let i = 0; i &#x3C; n - 1; i++) {\n      rl.write(\"x \");\n    }\n    rl.write(\"x\\n\");\n  }\n}\n\nrl.question(\"Input  : \", (n) => {\n  console.log(\"Output :\\n\");\n  n = parseInt(n);\n  if (isNaN(n)) {\n    console.error(\"Some error occured\");\n  } else {\n    pattern(n);\n  }\n  rl.close();\n});\n\n</code></pre>\n","markdown":"\n## Write a python programme to print the given pattern\n\n```txt\nInput  : 5\nOutput :\n\nx x x x x\nx       x\nx       x\nx       x\nx x x x x\n```\n\n---\n\n\n<CodeBlock>\n        \n```python\n# Write a Python programme to print the given pattern\n\ndef print_pattern(n: int) -> None:\n    print(\"Output : \\n\")\n    for col in range(n):\n        for row in range(n):\n            if col == 0 or col == n - 1 or row == 0 or row == n - 1:\n                print(' * ', end='')\n            else:\n                print('   ', end='')\n        print()\n\n\nn = int(input(\"input  : \"))\nprint_pattern(n)\n\n```\n                \n```c\n// Write a python programme to print the given pattern\n#include <stdio.h>\n\n#define BOUNDARY_STR (\"x\")\n\nvoid pattern(int n)\n{\n    for (int i = 0; i < n - 1; i++)\n    {\n        printf(\"%s \", BOUNDARY_STR);\n    }\n    printf(\"%s\\n\", BOUNDARY_STR);\n    for (int i = 0; i < n - 2; i++)\n    {\n        printf(BOUNDARY_STR);\n        for (int i = 0; i < n - 2; i++)\n        {\n            printf(\"  \");\n        }\n        printf(\" %s\\n\", BOUNDARY_STR);\n    }\n    if (n != 1)\n    {\n        for (int i = 0; i < n - 1; i++)\n        {\n            printf(\"%s \", BOUNDARY_STR);\n        }\n        printf(\"%s\\n\", BOUNDARY_STR);\n    }\n}\n\nint main(void)\n{\n    int n;\n    printf(\"Input : \");\n    scanf(\"%d\", &n);\n    pattern(n);\n    return 0;\n}\n\n```\n                \n```js\n// Write a python programme to print the given pattern\n\n\"use strict\";\n\n// perform following command to run programme\n// node pattern-3.js\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nfunction pattern(n) {\n  for (let i = 0; i < n - 1; i++) {\n    rl.write(\"x \");\n  }\n  rl.write(\"x\\n\");\n  for (let i = 0; i < n - 2; i++) {\n    rl.write(\"x\");\n    for (let i = 0; i < n - 2; i++) {\n      rl.write(\"  \");\n    }\n    rl.write(\" x\\n\");\n  }\n  if (n != 1) {\n    for (let i = 0; i < n - 1; i++) {\n      rl.write(\"x \");\n    }\n    rl.write(\"x\\n\");\n  }\n}\n\nrl.question(\"Input  : \", (n) => {\n  console.log(\"Output :\\n\");\n  n = parseInt(n);\n  if (isNaN(n)) {\n    console.error(\"Some error occured\");\n  } else {\n    pattern(n);\n  }\n  rl.close();\n});\n\n```\n                \n</CodeBlock>\n          \n        "}