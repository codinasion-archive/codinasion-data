{"slug":"pattern-1","title":"Print pattern","description":"Write a programme to print given pattern","tags":["c","js","py"],"contributors":["yacine-zitouni","ClasherKasten"],"latestUpdateDate":"2022-07-31T07:51:41Z","contentHtml":"<h2>Write a programme to print the given pattern</h2>\n<pre><code>* * * * *\n  * * * *\n    * * *\n      * *\n        *\n</code></pre>\n<hr>\n<pre><code>// Write a programme to print the given pattern\n// * * * * *\n//   * * * *\n//     * * *\n//       * *\n//         *\n\n#include &#x3C;stdio.h>\n\n#define PATTERN_STR (\"*\")\n\nvoid pattern(int n)\n{\n    for (int i = 0; i &#x3C; n; i++)\n    {\n        for (int j = 0; j &#x3C; n - 1; j++)\n        {\n            if (j >= i)\n            {\n                printf(\"%s \", PATTERN_STR);\n            }\n            else\n            {\n                printf(\"  \");\n            }\n        }\n        printf(\"%s\\n\", PATTERN_STR);\n    }\n}\n\nint main(void)\n{\n    int n;\n    printf(\"Input : \");\n    scanf(\"%d\", &#x26;n);\n    pattern(n);\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme to print the given pattern\n// * * * * *\n//   * * * *\n//     * * *\n//       * *\n//         *\n\n\"use strict\";\n\n// perform following command to run programme\n// node pattern-1.js\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nfunction pattern(n) {\n  for (let i = 0; i &#x3C; n; i++) {\n    console.log(\n      Array(n - i)\n        .fill(\"*\")\n        .join(\" \")\n        .padStart(2 * n - 1)\n    );\n  }\n}\n\nrl.question(\"Input  : \", (n) => {\n  console.log(\"Output :\");\n  n = parseInt(n);\n  if (isNaN(n)) {\n    console.error(\"Some error occured\");\n  } else {\n    pattern(n);\n  }\n  rl.close();\n});\n\n</code></pre>\n<pre><code># print a pattern\n\n# * * * * *\n#   * * * *\n#     * * *\n#       * *\n#         *\n\ndef printPattern(n):\n    for i in reversed(range(1, n+1)):\n        print((i*\" *\").rjust(2*n))\n\n\nprintPattern(14)\n\n</code></pre>\n","markdown":"\n## Write a programme to print the given pattern\n\n```txt\n* * * * *\n  * * * *\n    * * *\n      * *\n        *\n```\n\n---\n\n\n<CodeBlock>\n        \n```c\n// Write a programme to print the given pattern\n// * * * * *\n//   * * * *\n//     * * *\n//       * *\n//         *\n\n#include <stdio.h>\n\n#define PATTERN_STR (\"*\")\n\nvoid pattern(int n)\n{\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = 0; j < n - 1; j++)\n        {\n            if (j >= i)\n            {\n                printf(\"%s \", PATTERN_STR);\n            }\n            else\n            {\n                printf(\"  \");\n            }\n        }\n        printf(\"%s\\n\", PATTERN_STR);\n    }\n}\n\nint main(void)\n{\n    int n;\n    printf(\"Input : \");\n    scanf(\"%d\", &n);\n    pattern(n);\n    return 0;\n}\n\n```\n                \n```js\n// Write a programme to print the given pattern\n// * * * * *\n//   * * * *\n//     * * *\n//       * *\n//         *\n\n\"use strict\";\n\n// perform following command to run programme\n// node pattern-1.js\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nfunction pattern(n) {\n  for (let i = 0; i < n; i++) {\n    console.log(\n      Array(n - i)\n        .fill(\"*\")\n        .join(\" \")\n        .padStart(2 * n - 1)\n    );\n  }\n}\n\nrl.question(\"Input  : \", (n) => {\n  console.log(\"Output :\");\n  n = parseInt(n);\n  if (isNaN(n)) {\n    console.error(\"Some error occured\");\n  } else {\n    pattern(n);\n  }\n  rl.close();\n});\n\n```\n                \n```python\n# print a pattern\n\n# * * * * *\n#   * * * *\n#     * * *\n#       * *\n#         *\n\ndef printPattern(n):\n    for i in reversed(range(1, n+1)):\n        print((i*\" *\").rjust(2*n))\n\n\nprintPattern(14)\n\n```\n                \n</CodeBlock>\n          \n        "}