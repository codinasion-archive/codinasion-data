{"slug":"fibonaci-series-without-using-recursion","title":"Print Fibonacci series without recursion.","description":"Write a program to print Fibonacci series of n numbers without using recursion.","tags":["java","go","c","cpp","cs","js","py"],"contributors":["NeelPatel31","karthiksbh","jojo4441","MadhuS-1605","ClasherKasten"],"latestUpdateDate":"2022-07-05T15:31:30Z","contentHtml":"<h2>Write a program to print Fibonacci series without using recursion</h2>\n<pre><code>Input: 10\r\nOutput: 0 1 1 2 3 5 8 13 21 34\n</code></pre>\n<hr>\n<pre><code>// Write a program to print Fibonacci series without recursion\n#include &#x3C;iostream>\n\nusing namespace std;\n\nint main()\n{\n    int a = 0, b = 1, i = 0, temp = 0, n = 0;\n    cout &#x3C;&#x3C; \"Input  : \";\n    cin >> n;\n    cout &#x3C;&#x3C; \"Output : \";\n    while (i != n)\n    {\n        cout &#x3C;&#x3C; a &#x3C;&#x3C; \" \";\n        temp = a;\n        a = b;\n        b = temp + b;\n        i++;\n    }\n    cout &#x3C;&#x3C; endl;\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a program to print fibonacci series without using recursion\r\n#include &#x3C;stdio.h>\r\n\r\nint main()\r\n{\r\n    int a = 0, b = 1, temp = 0, n;\r\n    printf(\"Input  : \");\r\n    scanf(\"%d\", &#x26;n);\r\n    int i = 0;\r\n    printf(\"Output : \");\r\n    while (i != n)\r\n    {\r\n        printf(\"%d \", a);\r\n        temp = a;\r\n        a = b;\r\n        b = temp + b;\r\n        i++;\r\n    }\r\n    printf(\"\\n\");\r\n    return 0;\r\n}\n</code></pre>\n<pre><code>// Write a program to print fibonacci series without using recursion\nimport java.util.Scanner;\n\npublic class Fibonacci {\n\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"Input: \");\n    int n = sc.nextInt();\n    int a = 0, b = 1, temp = 0;\n\n    System.out.print(\"\\n\" + a + \" \" + b);\n\n    for (int i = 2; i &#x3C; n; i++) {\n      temp = a + b;\n      System.out.print(\" \" + temp);\n      a = b;\n      b = temp;\n    }\n    System.out.println();\n    sc.close();\n  }\n}\n\n</code></pre>\n<pre><code># Write a program to print fibonacci series without using recursion\r\n\r\na = 0\r\nb = 1\r\ni = 0\r\n\r\nn = int(input(\"Input  : \"))\r\n\r\nprint(\"Output : \", end=\"\")\r\nwhile (i != n):\r\n    print(a, end=\" \")\r\n    temp = a\r\n    a = b\r\n    b = temp + b\r\n    i += 1\r\nprint()\r\n\n</code></pre>\n<pre><code>// Write a program to print Fibonacci series without recursion\n\n\"use strict\";\n\n// perform following command to run programme\n// node fibonaci.js\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nrl.question(\"Input  : \", (n) => {\n  n = Number(n);\n  let [a, b] = [0, 1];\n  if (isNaN(n)) {\n    console.log(\"Some error occured\");\n  } else {\n    rl.write(\"Output :\");\n    for (let i = 0; i &#x3C; n; i++) {\n      rl.write(` ${a}`);\n      let tmp = a;\n      a = b;\n      b = tmp + b;\n    }\n    console.log();\n  }\n  rl.close();\n});\n\n</code></pre>\n<pre><code>// Write a program to print Fibonacci series without using recursion\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/big\"\n)\n\nfunc fibonacciSeriesWithoutRecusion(n int) *big.Int {\n\tvar a, b, c *big.Int\n\ta = big.NewInt(0)\n\tb = big.NewInt(1)\n\tc = big.NewInt(0)\n\tfmt.Print(a, \" \")\n\tfmt.Print(b, \" \")\n\tfor i := 0; i &#x3C; n-2; i++ {\n\t\tc = a.Add(a, b)\n\t\ta = b\n\t\tb = c\n\t\tfmt.Print(c, \" \")\n\t}\n\tfmt.Println(\"\")\n\treturn c\n}\n\nfunc main() {\n\tvar n int\n\tfmt.Print(\"Enter a number : \")\n\tfmt.Scan(&#x26;n)\n\tfmt.Print(\"\\nOutput : \")\n\tfibonacciSeriesWithoutRecusion(n)\n}\n\n</code></pre>\n<pre><code>// Write a program to print Fibonacci series without recursion\nusing System;\n\npublic class Fibonaci\n{\n    static void Main(string[] args)\n    {\n        Console.Write(\"Input  : \");\n        int n = int.Parse(Console.ReadLine());\n\n        int\n            a = 0,\n            b = 1,\n            i = 0,\n            temp = 0;\n\n        Console.Write(\"Output : \");\n\n        while (i != n)\n        {\n            Console.Write(a + \" \");\n            temp = a;\n            a = b;\n            b = temp + b;\n            i++;\n        }\n\n        Console.Write(\"\\n\");\n    }\n}\n\n</code></pre>\n","markdown":"\r\n## Write a program to print Fibonacci series without using recursion\r\n\r\n```txt\r\nInput: 10\r\nOutput: 0 1 1 2 3 5 8 13 21 34\r\n```\r\n\r\n---\r\n\n\n<CodeBlock>\n        \n```cpp\n// Write a program to print Fibonacci series without recursion\n#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int a = 0, b = 1, i = 0, temp = 0, n = 0;\n    cout << \"Input  : \";\n    cin >> n;\n    cout << \"Output : \";\n    while (i != n)\n    {\n        cout << a << \" \";\n        temp = a;\n        a = b;\n        b = temp + b;\n        i++;\n    }\n    cout << endl;\n    return 0;\n}\n\n```\n                \n```c\n// Write a program to print fibonacci series without using recursion\r\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int a = 0, b = 1, temp = 0, n;\r\n    printf(\"Input  : \");\r\n    scanf(\"%d\", &n);\r\n    int i = 0;\r\n    printf(\"Output : \");\r\n    while (i != n)\r\n    {\r\n        printf(\"%d \", a);\r\n        temp = a;\r\n        a = b;\r\n        b = temp + b;\r\n        i++;\r\n    }\r\n    printf(\"\\n\");\r\n    return 0;\r\n}\n```\n                \n```java\n// Write a program to print fibonacci series without using recursion\nimport java.util.Scanner;\n\npublic class Fibonacci {\n\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"Input: \");\n    int n = sc.nextInt();\n    int a = 0, b = 1, temp = 0;\n\n    System.out.print(\"\\n\" + a + \" \" + b);\n\n    for (int i = 2; i < n; i++) {\n      temp = a + b;\n      System.out.print(\" \" + temp);\n      a = b;\n      b = temp;\n    }\n    System.out.println();\n    sc.close();\n  }\n}\n\n```\n                \n```python\n# Write a program to print fibonacci series without using recursion\r\n\r\na = 0\r\nb = 1\r\ni = 0\r\n\r\nn = int(input(\"Input  : \"))\r\n\r\nprint(\"Output : \", end=\"\")\r\nwhile (i != n):\r\n    print(a, end=\" \")\r\n    temp = a\r\n    a = b\r\n    b = temp + b\r\n    i += 1\r\nprint()\r\n\n```\n                \n```js\n// Write a program to print Fibonacci series without recursion\n\n\"use strict\";\n\n// perform following command to run programme\n// node fibonaci.js\n\nconst readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nrl.question(\"Input  : \", (n) => {\n  n = Number(n);\n  let [a, b] = [0, 1];\n  if (isNaN(n)) {\n    console.log(\"Some error occured\");\n  } else {\n    rl.write(\"Output :\");\n    for (let i = 0; i < n; i++) {\n      rl.write(` ${a}`);\n      let tmp = a;\n      a = b;\n      b = tmp + b;\n    }\n    console.log();\n  }\n  rl.close();\n});\n\n```\n                \n```go\n// Write a program to print Fibonacci series without using recursion\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/big\"\n)\n\nfunc fibonacciSeriesWithoutRecusion(n int) *big.Int {\n\tvar a, b, c *big.Int\n\ta = big.NewInt(0)\n\tb = big.NewInt(1)\n\tc = big.NewInt(0)\n\tfmt.Print(a, \" \")\n\tfmt.Print(b, \" \")\n\tfor i := 0; i < n-2; i++ {\n\t\tc = a.Add(a, b)\n\t\ta = b\n\t\tb = c\n\t\tfmt.Print(c, \" \")\n\t}\n\tfmt.Println(\"\")\n\treturn c\n}\n\nfunc main() {\n\tvar n int\n\tfmt.Print(\"Enter a number : \")\n\tfmt.Scan(&n)\n\tfmt.Print(\"\\nOutput : \")\n\tfibonacciSeriesWithoutRecusion(n)\n}\n\n```\n                \n```cs\n// Write a program to print Fibonacci series without recursion\nusing System;\n\npublic class Fibonaci\n{\n    static void Main(string[] args)\n    {\n        Console.Write(\"Input  : \");\n        int n = int.Parse(Console.ReadLine());\n\n        int\n            a = 0,\n            b = 1,\n            i = 0,\n            temp = 0;\n\n        Console.Write(\"Output : \");\n\n        while (i != n)\n        {\n            Console.Write(a + \" \");\n            temp = a;\n            a = b;\n            b = temp + b;\n            i++;\n        }\n\n        Console.Write(\"\\n\");\n    }\n}\n\n```\n                \n</CodeBlock>\n          \n        "}