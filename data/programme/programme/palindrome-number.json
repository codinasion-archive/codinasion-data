{"latestUpdateDate":"2022-06-21T12:14:49Z","contentHtml":"<h2>Write a program to check palindrome number.</h2>\n<pre><code>Input  : 121\r\nOutput : Palindrome number\n</code></pre>\n<hr>\n<pre><code>def check_palindrome(n: int) -> str:\r\n    \"\"\"Checks if n is a palindrome\"\"\"\r\n    if str(n) == str(n)[::-1]:\r\n        return 'Palindrome Number'\r\n    return 'Not Palindrome Number'\r\n\r\n\r\nnum = int(input('Input  : '))\r\nprint('\\nOutput :', check_palindrome(num))\n</code></pre>\n<pre><code>import java.util.*;\r\n\r\npublic class solution {\r\n    public static String checkPalindrome(int a) {\r\n        int pal = 0, n;\r\n        int original = a;\r\n        while (a > 0) {\r\n            n = a % 10;\r\n            pal = pal * 10 + n;\r\n            a = a / 10;\r\n        }\r\n        if (original == pal) {\r\n            return \"Palindrome number\";\r\n        }\r\n        return \"Not palindrome number\";\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.print(\"Input  : \");\r\n        int num = sc.nextInt();\r\n        System.out.println(\"Output : \" + checkPalindrome(num));\r\n        sc.close();\r\n    }\r\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\r\n#include &#x3C;cstring>\r\nusing namespace std;\r\nstring checkPalindrome(int a)\r\n{\r\n    int pal = 0, n;\r\n    int original = a;\r\n    while (a > 0)\r\n    {\r\n        n = a % 10;\r\n        pal = pal * 10 + n;\r\n        a = a / 10;\r\n    }\r\n    if (original == pal)\r\n    {\r\n        return \"Palindrome number\";\r\n    }\r\n    return \"Not palindrome number\";\r\n}\r\n\r\nint main()\r\n{\r\n    int num;\r\n    cout &#x3C;&#x3C; \"Input  : \";\r\n    cin >> num;\r\n    cout &#x3C;&#x3C; \"Output : \" &#x3C;&#x3C; checkPalindrome(num) &#x3C;&#x3C; endl;\r\n    return 0;\r\n}\n</code></pre>\n<pre><code>#include &#x3C;stdio.h>\r\nchar *checkPalindrome(int a)\r\n{\r\n    int pal = 0, n;\r\n    int original = a;\r\n    while (a > 0)\r\n    {\r\n        n = a % 10;\r\n        pal = pal * 10 + n;\r\n        a = a / 10;\r\n    }\r\n    if (original == pal)\r\n    {\r\n        return \"Palindrome number\";\r\n    }\r\n    return \"Not palindrome number\";\r\n}\r\nint main()\r\n{\r\n    int num, b = 0;\r\n    printf(\"Input  : \");\r\n    scanf(\"%d\", &#x26;num);\r\n    printf(\"Output : %s\\n\", checkPalindrome(num));\r\n    return 0;\r\n}\n</code></pre>\n<pre><code>package main\r\n\r\nimport \"fmt\"\r\n\r\nfunc reverseInt(n int) int {\r\n\tvar remainder, reverse int\r\n\tfor n > 0 {\r\n\t\tremainder = n % 10\r\n\t\treverse = reverse*10 + remainder\r\n\t\tn /= 10\r\n\t}\r\n\treturn reverse\r\n}\r\n\r\nfunc isPalindrome(n int) bool {\r\n\tif n &#x3C; 0 {\r\n\t\treturn false\r\n\t}\r\n\tif n &#x3C; 10 {\r\n\t\treturn true\r\n\t}\r\n\treturn reverseInt(n) == n\r\n}\r\n\r\nfunc main() {\r\n\tvar n int\r\n\r\n\tfmt.Print(\"Input  : \")\r\n\tfmt.Scan(&#x26;n)\r\n\r\n\tif isPalindrome(n) {\r\n\t\tfmt.Println(\"Output : Palindrome number\")\r\n\t} else {\r\n\t\tfmt.Println(\"Output : Not palindrome number\")\r\n\t}\r\n}\n</code></pre>\n<pre><code>const reverseInt = function (n) {\r\n  let remainder,\r\n    reverse = 0;\r\n  while (n > 0) {\r\n    remainder = n % 10;\r\n    reverse = reverse * 10 + remainder;\r\n    n = Math.floor(n / 10);\r\n  }\r\n  return reverse;\r\n};\r\n\r\nconst isPalindrome = function (n) {\r\n  if (n &#x3C; 0) {\r\n    return false;\r\n  }\r\n  if (n &#x3C; 10) {\r\n    return true;\r\n  }\r\n  return reverseInt(n) == n;\r\n};\r\n\r\nconst readline = require(\"readline\");\r\nconst rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout,\r\n});\r\n\r\nrl.question(\"Input  : \", (n) => {\r\n  if (isPalindrome(n)) {\r\n    console.log(\"Output : Palindrome number\");\r\n    rl.close();\r\n  } else {\r\n    console.log(\"Output : Not palindrome number\");\r\n    rl.close();\r\n  }\r\n});\n</code></pre>\n<pre><code>using System;\r\n\r\nnamespace SpecialNumbers\r\n{\r\n    public class Palindrome\r\n    {\r\n        public static double Reverse(double number)\r\n        {\r\n            double\r\n                remainder,\r\n                reverse = 0;\r\n            while (number > 0)\r\n            {\r\n                remainder = number % 10;\r\n                reverse = reverse * 10 + remainder;\r\n                number = Math.Floor(number / 10);\r\n            }\r\n            return reverse;\r\n        }\r\n\r\n        public static bool IsPalindrome(double number)\r\n        {\r\n            if (number &#x3C; 0)\r\n            {\r\n                return false;\r\n            }\r\n            if (number &#x3C; 10)\r\n            {\r\n                return true;\r\n            }\r\n            return number == Reverse(number);\r\n        }\r\n\r\n        public static void PalindromeConsoleUtility(double number)\r\n        {\r\n            if (IsPalindrome(number))\r\n            {\r\n                Console.WriteLine(\"Output : Palindrome number\");\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Output : Not palindrome number\");\r\n            }\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            Console.Write(\"Input  : \");\r\n\r\n            double number;\r\n            if (double.TryParse(Console.ReadLine(), out number))\r\n            {\r\n                PalindromeConsoleUtility (number);\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Invalid Input\");\r\n            }\r\n        }\r\n    }\r\n}\n</code></pre>\n","markdown":"\r\n## Write a program to check palindrome number.\r\n\r\n```txt\r\nInput  : 121\r\nOutput : Palindrome number\r\n```\r\n\r\n---\r\n\r\n<CodeBlock>\r\n\r\n```python\r\ndef check_palindrome(n: int) -> str:\r\n    \"\"\"Checks if n is a palindrome\"\"\"\r\n    if str(n) == str(n)[::-1]:\r\n        return 'Palindrome Number'\r\n    return 'Not Palindrome Number'\r\n\r\n\r\nnum = int(input('Input  : '))\r\nprint('\\nOutput :', check_palindrome(num))\r\n```\r\n\r\n```java\r\nimport java.util.*;\r\n\r\npublic class solution {\r\n    public static String checkPalindrome(int a) {\r\n        int pal = 0, n;\r\n        int original = a;\r\n        while (a > 0) {\r\n            n = a % 10;\r\n            pal = pal * 10 + n;\r\n            a = a / 10;\r\n        }\r\n        if (original == pal) {\r\n            return \"Palindrome number\";\r\n        }\r\n        return \"Not palindrome number\";\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.print(\"Input  : \");\r\n        int num = sc.nextInt();\r\n        System.out.println(\"Output : \" + checkPalindrome(num));\r\n        sc.close();\r\n    }\r\n}\r\n```\r\n\r\n```cpp\r\n#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\nstring checkPalindrome(int a)\r\n{\r\n    int pal = 0, n;\r\n    int original = a;\r\n    while (a > 0)\r\n    {\r\n        n = a % 10;\r\n        pal = pal * 10 + n;\r\n        a = a / 10;\r\n    }\r\n    if (original == pal)\r\n    {\r\n        return \"Palindrome number\";\r\n    }\r\n    return \"Not palindrome number\";\r\n}\r\n\r\nint main()\r\n{\r\n    int num;\r\n    cout << \"Input  : \";\r\n    cin >> num;\r\n    cout << \"Output : \" << checkPalindrome(num) << endl;\r\n    return 0;\r\n}\r\n```\r\n\r\n```c\r\n#include <stdio.h>\r\nchar *checkPalindrome(int a)\r\n{\r\n    int pal = 0, n;\r\n    int original = a;\r\n    while (a > 0)\r\n    {\r\n        n = a % 10;\r\n        pal = pal * 10 + n;\r\n        a = a / 10;\r\n    }\r\n    if (original == pal)\r\n    {\r\n        return \"Palindrome number\";\r\n    }\r\n    return \"Not palindrome number\";\r\n}\r\nint main()\r\n{\r\n    int num, b = 0;\r\n    printf(\"Input  : \");\r\n    scanf(\"%d\", &num);\r\n    printf(\"Output : %s\\n\", checkPalindrome(num));\r\n    return 0;\r\n}\r\n```\r\n\r\n```go\r\npackage main\r\n\r\nimport \"fmt\"\r\n\r\nfunc reverseInt(n int) int {\r\n\tvar remainder, reverse int\r\n\tfor n > 0 {\r\n\t\tremainder = n % 10\r\n\t\treverse = reverse*10 + remainder\r\n\t\tn /= 10\r\n\t}\r\n\treturn reverse\r\n}\r\n\r\nfunc isPalindrome(n int) bool {\r\n\tif n < 0 {\r\n\t\treturn false\r\n\t}\r\n\tif n < 10 {\r\n\t\treturn true\r\n\t}\r\n\treturn reverseInt(n) == n\r\n}\r\n\r\nfunc main() {\r\n\tvar n int\r\n\r\n\tfmt.Print(\"Input  : \")\r\n\tfmt.Scan(&n)\r\n\r\n\tif isPalindrome(n) {\r\n\t\tfmt.Println(\"Output : Palindrome number\")\r\n\t} else {\r\n\t\tfmt.Println(\"Output : Not palindrome number\")\r\n\t}\r\n}\r\n```\r\n\r\n```javascript\r\nconst reverseInt = function (n) {\r\n  let remainder,\r\n    reverse = 0;\r\n  while (n > 0) {\r\n    remainder = n % 10;\r\n    reverse = reverse * 10 + remainder;\r\n    n = Math.floor(n / 10);\r\n  }\r\n  return reverse;\r\n};\r\n\r\nconst isPalindrome = function (n) {\r\n  if (n < 0) {\r\n    return false;\r\n  }\r\n  if (n < 10) {\r\n    return true;\r\n  }\r\n  return reverseInt(n) == n;\r\n};\r\n\r\nconst readline = require(\"readline\");\r\nconst rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout,\r\n});\r\n\r\nrl.question(\"Input  : \", (n) => {\r\n  if (isPalindrome(n)) {\r\n    console.log(\"Output : Palindrome number\");\r\n    rl.close();\r\n  } else {\r\n    console.log(\"Output : Not palindrome number\");\r\n    rl.close();\r\n  }\r\n});\r\n```\r\n\r\n```cs\r\nusing System;\r\n\r\nnamespace SpecialNumbers\r\n{\r\n    public class Palindrome\r\n    {\r\n        public static double Reverse(double number)\r\n        {\r\n            double\r\n                remainder,\r\n                reverse = 0;\r\n            while (number > 0)\r\n            {\r\n                remainder = number % 10;\r\n                reverse = reverse * 10 + remainder;\r\n                number = Math.Floor(number / 10);\r\n            }\r\n            return reverse;\r\n        }\r\n\r\n        public static bool IsPalindrome(double number)\r\n        {\r\n            if (number < 0)\r\n            {\r\n                return false;\r\n            }\r\n            if (number < 10)\r\n            {\r\n                return true;\r\n            }\r\n            return number == Reverse(number);\r\n        }\r\n\r\n        public static void PalindromeConsoleUtility(double number)\r\n        {\r\n            if (IsPalindrome(number))\r\n            {\r\n                Console.WriteLine(\"Output : Palindrome number\");\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Output : Not palindrome number\");\r\n            }\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            Console.Write(\"Input  : \");\r\n\r\n            double number;\r\n            if (double.TryParse(Console.ReadLine(), out number))\r\n            {\r\n                PalindromeConsoleUtility (number);\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Invalid Input\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n</CodeBlock>\r\n","frontMatter":{"slug":"palindrome-number","title":"Check palindrome number","description":"Write a program to check palindrome number","image":"https://raw.githubusercontent.com/codinasion/codinasion-programme/master/programme/palindrome-number/hero.png","tags":["python","java","cpp","c","go","js","cs"],"contributors":["NeelPatel31","seraph776","rossilor95"]}}