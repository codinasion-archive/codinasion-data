{"slug":"palindrome-number","title":"Check palindrome number","description":"Write a programme to check palindrome number","tags":["cs","java","py","c","cpp","go","js"],"contributors":["NeelPatel31","seraph776","rossilor95"],"latestUpdateDate":"2022-07-31T07:51:41Z","contentHtml":"<h2>Write a programme to check palindrome number.</h2>\n<pre><code>Input  : 121\r\nOutput : Palindrome number\n</code></pre>\n<hr>\n<pre><code>// Write a programme to check palindrome number\n\nconst reverseInt = function (n) {\n  let remainder,\n    reverse = 0;\n  while (n > 0) {\n    remainder = n % 10;\n    reverse = reverse * 10 + remainder;\n    n = Math.floor(n / 10);\n  }\n  return reverse;\n};\n\nconst isPalindrome = function (n) {\n  if (n &#x3C; 0) {\n    return false;\n  }\n  if (n &#x3C; 10) {\n    return true;\n  }\n  return reverseInt(n) == n;\n};\n\nconst readline = require(\"readline\");\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nrl.question(\"Input  : \", (n) => {\n  if (isPalindrome(n)) {\n    console.log(\"Output : Palindrome number\");\n    rl.close();\n  } else {\n    console.log(\"Output : Not palindrome number\");\n    rl.close();\n  }\n});\n\n</code></pre>\n<pre><code># Write a programme to check palindrome number\n\ndef check_palindrome(n: int) -> str:\n    \"\"\"Checks if n is a palindrome\"\"\"\n    if str(n) == str(n)[::-1]:\n        return 'Palindrome Number'\n    return 'Not Palindrome Number'\n\n\nnum = int(input('Input  : '))\nprint('\\nOutput :', check_palindrome(num))\n\n</code></pre>\n<pre><code>// Write a programme to check palindrome number\npackage main\n\nimport \"fmt\"\n\nfunc reverseInt(n int) int {\n\tvar remainder, reverse int\n\tfor n > 0 {\n\t\tremainder = n % 10\n\t\treverse = reverse*10 + remainder\n\t\tn /= 10\n\t}\n\treturn reverse\n}\n\nfunc isPalindrome(n int) bool {\n\tif n &#x3C; 0 {\n\t\treturn false\n\t}\n\tif n &#x3C; 10 {\n\t\treturn true\n\t}\n\treturn reverseInt(n) == n\n}\n\nfunc main() {\n\tvar n int\n\n\tfmt.Print(\"Input  : \")\n\tfmt.Scan(&#x26;n)\n\n\tif isPalindrome(n) {\n\t\tfmt.Println(\"Output : Palindrome number\")\n\t} else {\n\t\tfmt.Println(\"Output : Not palindrome number\")\n\t}\n}\n\n</code></pre>\n<pre><code>// Write a programme to check palindrome number\n#include &#x3C;iostream>\n#include &#x3C;cstring>\n\nusing namespace std;\n\nstring checkPalindrome(int a)\n{\n    int pal = 0, n;\n    int original = a;\n    while (a > 0)\n    {\n        n = a % 10;\n        pal = pal * 10 + n;\n        a = a / 10;\n    }\n    if (original == pal)\n    {\n        return \"Palindrome number\";\n    }\n    return \"Not palindrome number\";\n}\n\nint main()\n{\n    int num;\n    cout &#x3C;&#x3C; \"Input  : \";\n    cin >> num;\n    cout &#x3C;&#x3C; \"Output : \" &#x3C;&#x3C; checkPalindrome(num) &#x3C;&#x3C; endl;\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme to check palindrome number\n#include &#x3C;stdio.h>\n\nchar *checkPalindrome(int a)\n{\n    int pal = 0, n;\n    int original = a;\n    while (a > 0)\n    {\n        n = a % 10;\n        pal = pal * 10 + n;\n        a = a / 10;\n    }\n    if (original == pal)\n    {\n        return \"Palindrome number\";\n    }\n    return \"Not palindrome number\";\n}\n\nint main()\n{\n    int num, b = 0;\n    printf(\"Input  : \");\n    scanf(\"%d\", &#x26;num);\n    printf(\"Output : %s\\n\", checkPalindrome(num));\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme to check palindrome number\r\nusing System;\r\n\r\nnamespace SpecialNumbers\r\n{\r\n    public class Palindrome\r\n    {\r\n        public static double Reverse(double number)\r\n        {\r\n            double\r\n                remainder,\r\n                reverse = 0;\r\n            while (number > 0)\r\n            {\r\n                remainder = number % 10;\r\n                reverse = reverse * 10 + remainder;\r\n                number = Math.Floor(number / 10);\r\n            }\r\n            return reverse;\r\n        }\r\n\r\n        public static bool IsPalindrome(double number)\r\n        {\r\n            if (number &#x3C; 0)\r\n            {\r\n                return false;\r\n            }\r\n            if (number &#x3C; 10)\r\n            {\r\n                return true;\r\n            }\r\n            return number == Reverse(number);\r\n        }\r\n\r\n        public static void PalindromeConsoleUtility(double number)\r\n        {\r\n            if (IsPalindrome(number))\r\n            {\r\n                Console.WriteLine(\"Output : Palindrome number\");\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Output : Not palindrome number\");\r\n            }\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            Console.Write(\"Input  : \");\r\n\r\n            double number;\r\n            if (double.TryParse(Console.ReadLine(), out number))\r\n            {\r\n                PalindromeConsoleUtility (number);\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Invalid Input\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\n</code></pre>\n<pre><code>// Write a programme to check palindrome number\nimport java.util.*;\n\npublic class Palindrome {\n\n  public static String checkPalindrome(int a) {\n    int pal = 0, n;\n    int original = a;\n    while (a > 0) {\n      n = a % 10;\n      pal = pal * 10 + n;\n      a = a / 10;\n    }\n    if (original == pal) {\n      return \"Palindrome number\";\n    }\n    return \"Not palindrome number\";\n  }\n\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"Input  : \");\n    int num = sc.nextInt();\n    System.out.println(\"Output : \" + checkPalindrome(num));\n    sc.close();\n  }\n}\n\n</code></pre>\n","markdown":"\r\n## Write a programme to check palindrome number.\r\n\r\n```txt\r\nInput  : 121\r\nOutput : Palindrome number\r\n```\r\n\r\n---\r\n\n\n<CodeBlock>\n        \n```js\n// Write a programme to check palindrome number\n\nconst reverseInt = function (n) {\n  let remainder,\n    reverse = 0;\n  while (n > 0) {\n    remainder = n % 10;\n    reverse = reverse * 10 + remainder;\n    n = Math.floor(n / 10);\n  }\n  return reverse;\n};\n\nconst isPalindrome = function (n) {\n  if (n < 0) {\n    return false;\n  }\n  if (n < 10) {\n    return true;\n  }\n  return reverseInt(n) == n;\n};\n\nconst readline = require(\"readline\");\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n});\n\nrl.question(\"Input  : \", (n) => {\n  if (isPalindrome(n)) {\n    console.log(\"Output : Palindrome number\");\n    rl.close();\n  } else {\n    console.log(\"Output : Not palindrome number\");\n    rl.close();\n  }\n});\n\n```\n                \n```python\n# Write a programme to check palindrome number\n\ndef check_palindrome(n: int) -> str:\n    \"\"\"Checks if n is a palindrome\"\"\"\n    if str(n) == str(n)[::-1]:\n        return 'Palindrome Number'\n    return 'Not Palindrome Number'\n\n\nnum = int(input('Input  : '))\nprint('\\nOutput :', check_palindrome(num))\n\n```\n                \n```go\n// Write a programme to check palindrome number\npackage main\n\nimport \"fmt\"\n\nfunc reverseInt(n int) int {\n\tvar remainder, reverse int\n\tfor n > 0 {\n\t\tremainder = n % 10\n\t\treverse = reverse*10 + remainder\n\t\tn /= 10\n\t}\n\treturn reverse\n}\n\nfunc isPalindrome(n int) bool {\n\tif n < 0 {\n\t\treturn false\n\t}\n\tif n < 10 {\n\t\treturn true\n\t}\n\treturn reverseInt(n) == n\n}\n\nfunc main() {\n\tvar n int\n\n\tfmt.Print(\"Input  : \")\n\tfmt.Scan(&n)\n\n\tif isPalindrome(n) {\n\t\tfmt.Println(\"Output : Palindrome number\")\n\t} else {\n\t\tfmt.Println(\"Output : Not palindrome number\")\n\t}\n}\n\n```\n                \n```cpp\n// Write a programme to check palindrome number\n#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nstring checkPalindrome(int a)\n{\n    int pal = 0, n;\n    int original = a;\n    while (a > 0)\n    {\n        n = a % 10;\n        pal = pal * 10 + n;\n        a = a / 10;\n    }\n    if (original == pal)\n    {\n        return \"Palindrome number\";\n    }\n    return \"Not palindrome number\";\n}\n\nint main()\n{\n    int num;\n    cout << \"Input  : \";\n    cin >> num;\n    cout << \"Output : \" << checkPalindrome(num) << endl;\n    return 0;\n}\n\n```\n                \n```c\n// Write a programme to check palindrome number\n#include <stdio.h>\n\nchar *checkPalindrome(int a)\n{\n    int pal = 0, n;\n    int original = a;\n    while (a > 0)\n    {\n        n = a % 10;\n        pal = pal * 10 + n;\n        a = a / 10;\n    }\n    if (original == pal)\n    {\n        return \"Palindrome number\";\n    }\n    return \"Not palindrome number\";\n}\n\nint main()\n{\n    int num, b = 0;\n    printf(\"Input  : \");\n    scanf(\"%d\", &num);\n    printf(\"Output : %s\\n\", checkPalindrome(num));\n    return 0;\n}\n\n```\n                \n```cs\n// Write a programme to check palindrome number\r\nusing System;\r\n\r\nnamespace SpecialNumbers\r\n{\r\n    public class Palindrome\r\n    {\r\n        public static double Reverse(double number)\r\n        {\r\n            double\r\n                remainder,\r\n                reverse = 0;\r\n            while (number > 0)\r\n            {\r\n                remainder = number % 10;\r\n                reverse = reverse * 10 + remainder;\r\n                number = Math.Floor(number / 10);\r\n            }\r\n            return reverse;\r\n        }\r\n\r\n        public static bool IsPalindrome(double number)\r\n        {\r\n            if (number < 0)\r\n            {\r\n                return false;\r\n            }\r\n            if (number < 10)\r\n            {\r\n                return true;\r\n            }\r\n            return number == Reverse(number);\r\n        }\r\n\r\n        public static void PalindromeConsoleUtility(double number)\r\n        {\r\n            if (IsPalindrome(number))\r\n            {\r\n                Console.WriteLine(\"Output : Palindrome number\");\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Output : Not palindrome number\");\r\n            }\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            Console.Write(\"Input  : \");\r\n\r\n            double number;\r\n            if (double.TryParse(Console.ReadLine(), out number))\r\n            {\r\n                PalindromeConsoleUtility (number);\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Invalid Input\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\n```\n                \n```java\n// Write a programme to check palindrome number\nimport java.util.*;\n\npublic class Palindrome {\n\n  public static String checkPalindrome(int a) {\n    int pal = 0, n;\n    int original = a;\n    while (a > 0) {\n      n = a % 10;\n      pal = pal * 10 + n;\n      a = a / 10;\n    }\n    if (original == pal) {\n      return \"Palindrome number\";\n    }\n    return \"Not palindrome number\";\n  }\n\n  public static void main(String[] args) {\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"Input  : \");\n    int num = sc.nextInt();\n    System.out.println(\"Output : \" + checkPalindrome(num));\n    sc.close();\n  }\n}\n\n```\n                \n</CodeBlock>\n          \n        "}