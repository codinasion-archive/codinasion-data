{"slug":"random-prime-number","title":"Generate random prime number","description":"Write a programme to generate a random prime number in range n1-n2","tags":["c","cs","py"],"contributors":["PaoloFer","SpirosArk","icyca"],"latestUpdateDate":"2022-07-23T02:46:47Z","contentHtml":"<h2>Write a programme to generate a random prime number in range n1-n2</h2>\n<pre><code>Start range : 0\nEnd   range : 100\n\nOutput : 53\n</code></pre>\n<hr>\n<pre><code>// Write a programme to generate a random prime number in range n1-n2\n\n/*\nProgramm take as given that inputs are always lower&#x3C;upper\nNormally we would need a input control to confirm that the uper argument is always bigger\n*/\n\n#include &#x3C;stdio.h>\n#include &#x3C;stdlib.h>\n#include &#x3C;time.h>\n\nint isPrime(int n)\n{\n  int i;\n  if (n == 0 || n == 1)\n    return 0;\n  for (i = 2; i &#x3C;= n / 2; i++)\n  {\n    if (n % i == 0)\n    {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nint main()\n{\n  int lower, upper, num;\n\n  srand(time(0));\n  printf(\"Enter lower limit : \");\n  scanf(\"%d\", &#x26;lower);\n  printf(\"Enter upper limit : \");\n  scanf(\"%d\", &#x26;upper);\n\n  printf(\"\\nThe random prime number is : \");\n\n  int check = 0;\n  while (check != 1)\n  {\n    num = rand() % (upper - lower + 1) + lower;\n    check = isPrime(num);\n  }\n  printf(\"%d\\n\", num);\n\n  return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme to generate a random prime number in range n1-n2\nusing System;\nusing System.Collections.Generic;\n\nclass RandomPrimeNumber\n{\n    public static void Main(string[] args)\n    {\n        int\n            a,\n            b,\n            i,\n            j,\n            flag;\n\n        Console.Write(\"Enter lower bound of the interval : \");\n\n        a = int.Parse(Console.ReadLine());\n\n        Console.Write(\"\\nEnter upper bound of the interval : \");\n\n        b = int.Parse(Console.ReadLine());\n\n        Console\n            .Write(\"\\nA random prime number between {0} and {1} is : \", a, b);\n        List&#x3C;int> numbers = new List&#x3C;int>();\n\n        for (i = a; i &#x3C;= b; i++)\n        {\n            if (i == 1 || i == 0) continue;\n\n            flag = 1;\n\n            for (j = 2; j &#x3C;= i / 2; ++j)\n            {\n                if (i % j == 0)\n                {\n                    flag = 0;\n                    break;\n                }\n            }\n\n            if (flag == 1) numbers.Add(i);\n        }\n        Random rnd = new Random();\n        int r = rnd.Next(numbers.Count);\n        Console.WriteLine(numbers[r]);\n    }\n}\n\n</code></pre>\n<pre><code># Write a programme to generate a random prime number in range n1-n2\n\nimport random\n\n\ndef is_prime(n):\n    for i in range(2, n):\n        if (n % i) == 0:\n            return False\n    return True\n\n\ndef random_prime_number(number1, number2):\n    random_number = random.randint(number1, number2)\n\n    while not is_prime(random_number):\n        random_number = random.randint(number1, number2)\n    return random_number\n\n\nrange_start = 0\nrange_end = 100\nprint(\"Start range :\", range_start)\nprint(\"End   range :\", range_end)\nprint(\"\\nRandom prime number :\", random_prime_number(range_start, range_end))\n\n</code></pre>\n","markdown":"\n## Write a programme to generate a random prime number in range n1-n2\n\n```txt\nStart range : 0\nEnd   range : 100\n\nOutput : 53\n```\n\n---\n\n\n<CodeBlock>\n        \n```c\n// Write a programme to generate a random prime number in range n1-n2\n\n/*\nProgramm take as given that inputs are always lower<upper\nNormally we would need a input control to confirm that the uper argument is always bigger\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint isPrime(int n)\n{\n  int i;\n  if (n == 0 || n == 1)\n    return 0;\n  for (i = 2; i <= n / 2; i++)\n  {\n    if (n % i == 0)\n    {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nint main()\n{\n  int lower, upper, num;\n\n  srand(time(0));\n  printf(\"Enter lower limit : \");\n  scanf(\"%d\", &lower);\n  printf(\"Enter upper limit : \");\n  scanf(\"%d\", &upper);\n\n  printf(\"\\nThe random prime number is : \");\n\n  int check = 0;\n  while (check != 1)\n  {\n    num = rand() % (upper - lower + 1) + lower;\n    check = isPrime(num);\n  }\n  printf(\"%d\\n\", num);\n\n  return 0;\n}\n\n```\n                \n```cs\n// Write a programme to generate a random prime number in range n1-n2\nusing System;\nusing System.Collections.Generic;\n\nclass RandomPrimeNumber\n{\n    public static void Main(string[] args)\n    {\n        int\n            a,\n            b,\n            i,\n            j,\n            flag;\n\n        Console.Write(\"Enter lower bound of the interval : \");\n\n        a = int.Parse(Console.ReadLine());\n\n        Console.Write(\"\\nEnter upper bound of the interval : \");\n\n        b = int.Parse(Console.ReadLine());\n\n        Console\n            .Write(\"\\nA random prime number between {0} and {1} is : \", a, b);\n        List<int> numbers = new List<int>();\n\n        for (i = a; i <= b; i++)\n        {\n            if (i == 1 || i == 0) continue;\n\n            flag = 1;\n\n            for (j = 2; j <= i / 2; ++j)\n            {\n                if (i % j == 0)\n                {\n                    flag = 0;\n                    break;\n                }\n            }\n\n            if (flag == 1) numbers.Add(i);\n        }\n        Random rnd = new Random();\n        int r = rnd.Next(numbers.Count);\n        Console.WriteLine(numbers[r]);\n    }\n}\n\n```\n                \n```python\n# Write a programme to generate a random prime number in range n1-n2\n\nimport random\n\n\ndef is_prime(n):\n    for i in range(2, n):\n        if (n % i) == 0:\n            return False\n    return True\n\n\ndef random_prime_number(number1, number2):\n    random_number = random.randint(number1, number2)\n\n    while not is_prime(random_number):\n        random_number = random.randint(number1, number2)\n    return random_number\n\n\nrange_start = 0\nrange_end = 100\nprint(\"Start range :\", range_start)\nprint(\"End   range :\", range_end)\nprint(\"\\nRandom prime number :\", random_prime_number(range_start, range_end))\n\n```\n                \n</CodeBlock>\n          \n        "}