{"contentHtml":"<h2>Write a program to print the given pattern</h2>\n<pre><code>    *\n   * *\n  * * *\n * * * *\n* * * * *\n * * * *\n  * * *\n   * *\n    *\n</code></pre>\n<hr>\n<pre><code># print pattern function\ndef printPattern(n):\n    # print the top half of the pattern\n    for i in range(1,n+1):\n        print((i*\"* \").rjust(n+i))\n    # print the last half of the pattern\n    for i in reversed(range(1,n)):\n        print((i*\"* \").rjust(n+i))\n\n# test\nprintPattern(5)\n</code></pre>\n<pre><code>#include &#x3C;stdio.h>\n\nvoid pattern(int n)\n{\n    for (int i = 0; i &#x3C; n; i++)\n    {\n        for (int j = n - 1; j > i; j--)\n        {\n            printf(\" \");\n        }\n        for (int k = 0; k &#x3C;= i; k++)\n        {\n            printf(\"* \");\n        }\n        printf(\"\\n\");\n    }\n    for (int i = 1; i &#x3C; n; i++)\n    {\n        for (int l = 1; l &#x3C;= i; l++)\n        {\n            printf(\" \");\n        }\n        for (int m = n; m > i; m--)\n        {\n            printf(\"* \");\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    int n;\n    printf(\"Input : \");\n    scanf(\"%d\", &#x26;n);\n    pattern(n);\n    return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\nusing namespace std;\n\nvoid pattern(int n)\n{\n    for (int i = 0; i &#x3C; n; i++)\n    {\n        for (int j = n - 1; j > i; j--)\n        {\n            cout &#x3C;&#x3C; \" \";\n        }\n        for (int k = 0; k &#x3C;= i; k++)\n        {\n            cout &#x3C;&#x3C; \"* \";\n        }\n        cout &#x3C;&#x3C; endl;\n    }\n    for (int i = 1; i &#x3C; n; i++)\n    {\n        for (int k = 1; k &#x3C;= i; k++)\n        {\n            cout &#x3C;&#x3C; \" \";\n        }\n        for (int j = n - 1; j > i - 1; j--)\n        {\n            cout &#x3C;&#x3C; \"* \";\n        }\n        cout &#x3C;&#x3C; endl;\n    }\n}\n\nint main()\n{\n    int a;\n    cout &#x3C;&#x3C; \"Input : \";\n    cin >> a;\n    pattern(a);\n    return 0;\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\npublic class solution {\n    public static void pattern(int n) {\n        for (int i = 0; i &#x3C; n; i++) {\n            for (int j = n - 1; j > i; j--) {\n                System.out.print(\" \");\n            }\n            for (int k = 0; k &#x3C;= i; k++) {\n                System.out.print(\"* \");\n            }\n            System.out.println();\n        }\n        for (int i = 1; i &#x3C; n; i++) {\n            for (int k = 1; k &#x3C;= i; k++) {\n                System.out.print(\" \");\n            }\n            for (int j = n - 1; j > i - 1; j--) {\n                System.out.print(\"* \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Input : \");\n        int a = sc.nextInt();\n        pattern(a);\n        sc.close();\n    }\n}\n</code></pre>\n<pre><code>const printPatternTwo = (n) => {\n  for (let i = 1; i &#x3C; n * 2; i++) {\n    let stars = i &#x3C;= n ? i : n * 2 - i;\n    let offsetSpaces = n - stars;\n    console.log(\" \".repeat(offsetSpaces) + \"* \".repeat(stars));\n  }\n};\n\nprintPatternTwo(3);\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar str string\n\n\tfmt.Print(\"Input : \")\n\tfmt.Scan(&#x26;str)\n\n\tnum, err := strconv.Atoi(str)\n\tif err != nil || num &#x3C; 0 {\n\t\tfmt.Printf(\"Input error: %s\", str)\n\t\treturn\n\t}\n\n\tfor i := 1; i &#x3C; num*2; i++ {\n\t\tvar stars int\n\t\tif i &#x3C;= num {\n\t\t\tstars = i\n\t\t} else {\n\t\t\tstars = num*2 - i\n\t\t}\n\n\t\tfor offset := num - stars; offset > 0; offset-- {\n\t\t\tfmt.Print(\" \")\n\t\t}\n\t\tfor ; stars > 0; stars-- {\n\t\t\tfmt.Print(\"* \")\n\t\t}\n\t\tfmt.Println()\n\t}\n}\n</code></pre>\n","markdown":"\n## Write a program to print the given pattern\n\n```txt\n    *\n   * *\n  * * *\n * * * *\n* * * * *\n * * * *\n  * * *\n   * *\n    *\n```\n\n---\n\n<CodeBlock>\n\n```python\n# print pattern function\ndef printPattern(n):\n    # print the top half of the pattern\n    for i in range(1,n+1):\n        print((i*\"* \").rjust(n+i))\n    # print the last half of the pattern\n    for i in reversed(range(1,n)):\n        print((i*\"* \").rjust(n+i))\n\n# test\nprintPattern(5)\n```\n\n```c\n#include <stdio.h>\n\nvoid pattern(int n)\n{\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = n - 1; j > i; j--)\n        {\n            printf(\" \");\n        }\n        for (int k = 0; k <= i; k++)\n        {\n            printf(\"* \");\n        }\n        printf(\"\\n\");\n    }\n    for (int i = 1; i < n; i++)\n    {\n        for (int l = 1; l <= i; l++)\n        {\n            printf(\" \");\n        }\n        for (int m = n; m > i; m--)\n        {\n            printf(\"* \");\n        }\n        printf(\"\\n\");\n    }\n}\n\nint main()\n{\n    int n;\n    printf(\"Input : \");\n    scanf(\"%d\", &n);\n    pattern(n);\n    return 0;\n}\n```\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nvoid pattern(int n)\n{\n    for (int i = 0; i < n; i++)\n    {\n        for (int j = n - 1; j > i; j--)\n        {\n            cout << \" \";\n        }\n        for (int k = 0; k <= i; k++)\n        {\n            cout << \"* \";\n        }\n        cout << endl;\n    }\n    for (int i = 1; i < n; i++)\n    {\n        for (int k = 1; k <= i; k++)\n        {\n            cout << \" \";\n        }\n        for (int j = n - 1; j > i - 1; j--)\n        {\n            cout << \"* \";\n        }\n        cout << endl;\n    }\n}\n\nint main()\n{\n    int a;\n    cout << \"Input : \";\n    cin >> a;\n    pattern(a);\n    return 0;\n}\n```\n\n```java\nimport java.util.Scanner;\n\npublic class solution {\n    public static void pattern(int n) {\n        for (int i = 0; i < n; i++) {\n            for (int j = n - 1; j > i; j--) {\n                System.out.print(\" \");\n            }\n            for (int k = 0; k <= i; k++) {\n                System.out.print(\"* \");\n            }\n            System.out.println();\n        }\n        for (int i = 1; i < n; i++) {\n            for (int k = 1; k <= i; k++) {\n                System.out.print(\" \");\n            }\n            for (int j = n - 1; j > i - 1; j--) {\n                System.out.print(\"* \");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Input : \");\n        int a = sc.nextInt();\n        pattern(a);\n        sc.close();\n    }\n}\n```\n\n```javascript\nconst printPatternTwo = (n) => {\n  for (let i = 1; i < n * 2; i++) {\n    let stars = i <= n ? i : n * 2 - i;\n    let offsetSpaces = n - stars;\n    console.log(\" \".repeat(offsetSpaces) + \"* \".repeat(stars));\n  }\n};\n\nprintPatternTwo(3);\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar str string\n\n\tfmt.Print(\"Input : \")\n\tfmt.Scan(&str)\n\n\tnum, err := strconv.Atoi(str)\n\tif err != nil || num < 0 {\n\t\tfmt.Printf(\"Input error: %s\", str)\n\t\treturn\n\t}\n\n\tfor i := 1; i < num*2; i++ {\n\t\tvar stars int\n\t\tif i <= num {\n\t\t\tstars = i\n\t\t} else {\n\t\t\tstars = num*2 - i\n\t\t}\n\n\t\tfor offset := num - stars; offset > 0; offset-- {\n\t\t\tfmt.Print(\" \")\n\t\t}\n\t\tfor ; stars > 0; stars-- {\n\t\t\tfmt.Print(\"* \")\n\t\t}\n\t\tfmt.Println()\n\t}\n}\n```\n\n</CodeBlock>\n","frontMatter":{"slug":"pattern-2","title":"Print pattern","description":"Write a programme to print the given pattern","image":"https://raw.githubusercontent.com/codinasion/codinasion-programme/master/programme/pattern-2/hero.png","tags":["python","c","cpp","java","js","go"],"contributors":["yacine-zitouni","NeelPatel31","rutterjt","umaxyon"]}}