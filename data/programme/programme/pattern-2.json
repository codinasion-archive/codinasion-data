{"slug":"pattern-2","title":"Print pattern","description":"Write a programme to print the given pattern","tags":["java","c","cpp","cs","go","js","py"],"contributors":["yacine-zitouni","NeelPatel31","rutterjt","umaxyon"],"latestUpdateDate":"2022-07-02T09:22:10Z","contentHtml":"<h2>Write a program to print the given pattern</h2>\n<pre><code>    *\n   * *\n  * * *\n * * * *\n* * * * *\n * * * *\n  * * *\n   * *\n    *\n</code></pre>\n<hr>\n<pre><code>// Write a programme to print the given pattern\r\n#include &#x3C;iostream>\r\n\r\nusing namespace std;\r\n\r\nvoid pattern(int n)\r\n{\r\n    for (int i = 0; i &#x3C; n; i++)\r\n    {\r\n        for (int j = n - 1; j > i; j--)\r\n        {\r\n            cout &#x3C;&#x3C; \" \";\r\n        }\r\n        for (int k = 0; k &#x3C;= i; k++)\r\n        {\r\n            cout &#x3C;&#x3C; \"* \";\r\n        }\r\n        cout &#x3C;&#x3C; endl;\r\n    }\r\n    for (int i = 1; i &#x3C; n; i++)\r\n    {\r\n        for (int k = 1; k &#x3C;= i; k++)\r\n        {\r\n            cout &#x3C;&#x3C; \" \";\r\n        }\r\n        for (int j = n - 1; j > i - 1; j--)\r\n        {\r\n            cout &#x3C;&#x3C; \"* \";\r\n        }\r\n        cout &#x3C;&#x3C; endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cout &#x3C;&#x3C; \"Input : \";\r\n    cin >> a;\r\n    pattern(a);\r\n    return 0;\r\n}\r\n\n</code></pre>\n<pre><code># print pattern\n\n#     *\n#    * *\n#   * * *\n#  * * * *\n# * * * * *\n#  * * * *\n#   * * *\n#    * *\n#     *\n\ndef printPattern(n):\n    for i in range(1, n+1):\n        print((i*\"* \").rjust(n+i))\n    for i in reversed(range(1, n)):\n        print((i*\"* \").rjust(n+i))\n\n\nprintPattern(3)\n\n</code></pre>\n<pre><code>// Write a programme to print the given pattern\r\n#include &#x3C;stdio.h>\r\n\r\nvoid pattern(int n)\r\n{\r\n    for (int i = 0; i &#x3C; n; i++)\r\n    {\r\n        for (int j = n - 1; j > i; j--)\r\n        {\r\n            printf(\" \");\r\n        }\r\n        for (int k = 0; k &#x3C;= i; k++)\r\n        {\r\n            printf(\"* \");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    for (int i = 1; i &#x3C; n; i++)\r\n    {\r\n        for (int l = 1; l &#x3C;= i; l++)\r\n        {\r\n            printf(\" \");\r\n        }\r\n        for (int m = n; m > i; m--)\r\n        {\r\n            printf(\"* \");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    printf(\"Input : \");\r\n    scanf(\"%d\", &#x26;n);\r\n    pattern(n);\r\n    return 0;\r\n}\r\n\n</code></pre>\n<pre><code>// Write a programme to print the given pattern\r\nimport java.util.Scanner;\r\n\r\npublic class Pattern2 {\r\n\r\n  public static void pattern2(int n) {\r\n    for (int i = 0; i &#x3C; n; i++) {\r\n      for (int j = n - 1; j > i; j--) {\r\n        System.out.print(\" \");\r\n      }\r\n      for (int k = 0; k &#x3C;= i; k++) {\r\n        System.out.print(\"* \");\r\n      }\r\n      System.out.println();\r\n    }\r\n    for (int i = 1; i &#x3C; n; i++) {\r\n      for (int k = 1; k &#x3C;= i; k++) {\r\n        System.out.print(\" \");\r\n      }\r\n      for (int j = n - 1; j > i - 1; j--) {\r\n        System.out.print(\"* \");\r\n      }\r\n      System.out.println();\r\n    }\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    Scanner sc = new Scanner(System.in);\r\n    System.out.print(\"Input : \");\r\n    int a = sc.nextInt();\r\n    pattern2(a);\r\n    sc.close();\r\n  }\r\n}\r\n\n</code></pre>\n<pre><code>// Write a programme to print the given pattern\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar str string\n\n\tfmt.Print(\"Input : \")\n\tfmt.Scan(&#x26;str)\n\n\tnum, err := strconv.Atoi(str)\n\tif err != nil || num &#x3C; 0 {\n\t\tfmt.Printf(\"Input error: %s\", str)\n\t\treturn\n\t}\n\n\tfor i := 1; i &#x3C; num*2; i++ {\n\t\tvar stars int\n\t\tif i &#x3C;= num {\n\t\t\tstars = i\n\t\t} else {\n\t\t\tstars = num*2 - i\n\t\t}\n\n\t\tfor offset := num - stars; offset > 0; offset-- {\n\t\t\tfmt.Print(\" \")\n\t\t}\n\t\tfor ; stars > 0; stars-- {\n\t\t\tfmt.Print(\"* \")\n\t\t}\n\t\tfmt.Println()\n\t}\n}\n\n</code></pre>\n<pre><code>// Write a programme to print the given pattern\nusing System;\n\npublic class Patern2\n{\n    public static void Main(string[] args)\n    {\n        Console.Write(\"Input  : \");\n        if (int.TryParse(Console.ReadLine(), out int num))\n        {\n            for (int i = 0; i &#x3C; num * 2; i++)\n            {\n                int stars = i &#x3C;= num ? i : num * 2 - i;\n                string line = \"\";\n\n                for (int offset = num - stars; offset > 0; offset--)\n                line += \" \";\n                for (; stars > 0; stars--) line += \"* \";\n\n                Console.WriteLine (line);\n            }\n        }\n        else\n        {\n            Console.WriteLine(\"Input Error\");\n        }\n    }\n}\n\n</code></pre>\n<pre><code>/*\nWrite a program to print the given pattern:\n\nfor n = 3:\n\n  *\n * *\n* * *\n * *\n  *\n\n*/\n\nconst printPatternTwo = (n) => {\n  for (let i = 1; i &#x3C; n * 2; i++) {\n    let stars = i &#x3C;= n ? i : n * 2 - i;\n    let offsetSpaces = n - stars;\n    console.log(\" \".repeat(offsetSpaces) + \"* \".repeat(stars));\n  }\n};\n\nprintPatternTwo(3);\n\n</code></pre>\n","markdown":"\n## Write a program to print the given pattern\n\n```txt\n    *\n   * *\n  * * *\n * * * *\n* * * * *\n * * * *\n  * * *\n   * *\n    *\n```\n\n---\n\n\n<CodeBlock>\n        \n```cpp\n// Write a programme to print the given pattern\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nvoid pattern(int n)\r\n{\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int j = n - 1; j > i; j--)\r\n        {\r\n            cout << \" \";\r\n        }\r\n        for (int k = 0; k <= i; k++)\r\n        {\r\n            cout << \"* \";\r\n        }\r\n        cout << endl;\r\n    }\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        for (int k = 1; k <= i; k++)\r\n        {\r\n            cout << \" \";\r\n        }\r\n        for (int j = n - 1; j > i - 1; j--)\r\n        {\r\n            cout << \"* \";\r\n        }\r\n        cout << endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int a;\r\n    cout << \"Input : \";\r\n    cin >> a;\r\n    pattern(a);\r\n    return 0;\r\n}\r\n\n```\n                \n```python\n# print pattern\n\n#     *\n#    * *\n#   * * *\n#  * * * *\n# * * * * *\n#  * * * *\n#   * * *\n#    * *\n#     *\n\ndef printPattern(n):\n    for i in range(1, n+1):\n        print((i*\"* \").rjust(n+i))\n    for i in reversed(range(1, n)):\n        print((i*\"* \").rjust(n+i))\n\n\nprintPattern(3)\n\n```\n                \n```c\n// Write a programme to print the given pattern\r\n#include <stdio.h>\r\n\r\nvoid pattern(int n)\r\n{\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int j = n - 1; j > i; j--)\r\n        {\r\n            printf(\" \");\r\n        }\r\n        for (int k = 0; k <= i; k++)\r\n        {\r\n            printf(\"* \");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        for (int l = 1; l <= i; l++)\r\n        {\r\n            printf(\" \");\r\n        }\r\n        for (int m = n; m > i; m--)\r\n        {\r\n            printf(\"* \");\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    printf(\"Input : \");\r\n    scanf(\"%d\", &n);\r\n    pattern(n);\r\n    return 0;\r\n}\r\n\n```\n                \n```java\n// Write a programme to print the given pattern\r\nimport java.util.Scanner;\r\n\r\npublic class Pattern2 {\r\n\r\n  public static void pattern2(int n) {\r\n    for (int i = 0; i < n; i++) {\r\n      for (int j = n - 1; j > i; j--) {\r\n        System.out.print(\" \");\r\n      }\r\n      for (int k = 0; k <= i; k++) {\r\n        System.out.print(\"* \");\r\n      }\r\n      System.out.println();\r\n    }\r\n    for (int i = 1; i < n; i++) {\r\n      for (int k = 1; k <= i; k++) {\r\n        System.out.print(\" \");\r\n      }\r\n      for (int j = n - 1; j > i - 1; j--) {\r\n        System.out.print(\"* \");\r\n      }\r\n      System.out.println();\r\n    }\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    Scanner sc = new Scanner(System.in);\r\n    System.out.print(\"Input : \");\r\n    int a = sc.nextInt();\r\n    pattern2(a);\r\n    sc.close();\r\n  }\r\n}\r\n\n```\n                \n```go\n// Write a programme to print the given pattern\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar str string\n\n\tfmt.Print(\"Input : \")\n\tfmt.Scan(&str)\n\n\tnum, err := strconv.Atoi(str)\n\tif err != nil || num < 0 {\n\t\tfmt.Printf(\"Input error: %s\", str)\n\t\treturn\n\t}\n\n\tfor i := 1; i < num*2; i++ {\n\t\tvar stars int\n\t\tif i <= num {\n\t\t\tstars = i\n\t\t} else {\n\t\t\tstars = num*2 - i\n\t\t}\n\n\t\tfor offset := num - stars; offset > 0; offset-- {\n\t\t\tfmt.Print(\" \")\n\t\t}\n\t\tfor ; stars > 0; stars-- {\n\t\t\tfmt.Print(\"* \")\n\t\t}\n\t\tfmt.Println()\n\t}\n}\n\n```\n                \n```cs\n// Write a programme to print the given pattern\nusing System;\n\npublic class Patern2\n{\n    public static void Main(string[] args)\n    {\n        Console.Write(\"Input  : \");\n        if (int.TryParse(Console.ReadLine(), out int num))\n        {\n            for (int i = 0; i < num * 2; i++)\n            {\n                int stars = i <= num ? i : num * 2 - i;\n                string line = \"\";\n\n                for (int offset = num - stars; offset > 0; offset--)\n                line += \" \";\n                for (; stars > 0; stars--) line += \"* \";\n\n                Console.WriteLine (line);\n            }\n        }\n        else\n        {\n            Console.WriteLine(\"Input Error\");\n        }\n    }\n}\n\n```\n                \n```js\n/*\nWrite a program to print the given pattern:\n\nfor n = 3:\n\n  *\n * *\n* * *\n * *\n  *\n\n*/\n\nconst printPatternTwo = (n) => {\n  for (let i = 1; i < n * 2; i++) {\n    let stars = i <= n ? i : n * 2 - i;\n    let offsetSpaces = n - stars;\n    console.log(\" \".repeat(offsetSpaces) + \"* \".repeat(stars));\n  }\n};\n\nprintPatternTwo(3);\n\n```\n                \n</CodeBlock>\n          \n        "}