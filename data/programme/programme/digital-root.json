{"slug":"digital-root","title":"Digital Root","description":"Write a programme for Digital Root of a number","tags":["java","c","cpp","cs","go","js","py"],"contributors":["arth2002","ConorJEM","ferruhcihan","MadhuS-1605","umaxyon"],"latestUpdateDate":"2022-07-02T09:22:10Z","contentHtml":"<h2>Write a programme for Digital Root of a number</h2>\n<p><code>Digital Root</code> is the single number obtained by adding the number successively.</p>\n<pre><code>347 = 3 + 4 + 7 = 14\n14 = 1 + 4 = 5\n</code></pre>\n<p>Thus, 5 is a single digit number, which is the digital root/ seed number of 347.</p>\n<pre><code>Input  : 347\nOutput : 5\n</code></pre>\n<hr>\n<pre><code>// Write a programme for Digital Root of a number\n#include &#x3C;stdio.h>\n\nint digital_root(int n)\n{\n    if (n == 0)\n        return 0;\n    else\n    {\n        return 1 + ((n - 1) % 9);\n    }\n}\n\nint main()\n{\n    int n;\n    printf(\"Enter Number : \");\n    scanf(\"%d\", &#x26;n);\n    int ans = digital_root(n);\n    printf(\"\\n\");\n    printf(\"Digital Root Value : %d\\n\", ans);\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Converts a number to its digital root\n// The digital root of a number is defined as the sum of each digit defining the original number\n// example 127 -> 1 + 2 + 7 -> 10\n//          10 -> 1 + 0 -> 1\n\nimport java.util.Scanner;\n\npublic class DigitalRoot {\n\n  public static void convert(int a) {\n    // Ramans formula for calcuating the digital root\n    System.out.println(1 + (a - 1) % 9);\n  }\n\n  public static void main(String[] args) {\n    int a = 0;\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"Input  : \");\n    a = sc.nextInt();\n    System.out.print(\"\\nThe digital root is : \");\n    convert(a);\n    sc.close();\n  }\n}\n\n</code></pre>\n<pre><code>// Write a programme for Digital Root of a number\nusing System;\n\npublic class DigitalRoot\n{\n    public static void Main(string[] args)\n    {\n        Console.Write(\"Input  : \");\n        int num;\n        if (int.TryParse(Console.ReadLine(), out num))\n        {\n            Console.WriteLine(\"\\nOutput : {0}\", Convert(num));\n        }\n        else\n        {\n            Console.WriteLine(\"Input Err\");\n        }\n    }\n\n    public static int Convert(int n)\n    {\n        if (n == 0) return 0;\n\n        return 1 + ((n - 1) % 9);\n    }\n}\n\n</code></pre>\n<pre><code># Write a programme for Digital Root of a number\n\ndef digital_root(n):\n    if n == 0:\n        return 0\n    else:\n        return 1 + ((n-1) % 9)\n\n\nn = int(input(\"Enter Number : \"))\nprint(\"Digital Root :\", digital_root(n))\n\n</code></pre>\n<pre><code>// Write a programme for Digital Root of a number\n#include &#x3C;iostream>\n\nusing namespace std;\n\nint digital_root(int n)\n{\n    if (n == 0)\n        return 0;\n    else\n    {\n        return 1 + ((n - 1) % 9);\n    }\n}\n\nint main()\n{\n    int n;\n    cout &#x3C;&#x3C; \"Enter Number : \";\n    cin >> n;\n    cout &#x3C;&#x3C; endl;\n    cout &#x3C;&#x3C; \"Digital Root Value : \" &#x3C;&#x3C; digital_root(n) &#x3C;&#x3C; endl;\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme for Digital Root of a number\n// digital root is the sum of the digits of a number\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar n int\n\tfmt.Print(\"Enter the number : \")\n\tfmt.Scan(&#x26;n)\n\tfmt.Println(\"The digital root of the number is :\", digitalRoot(n))\n}\n\nfunc digitalRoot(n int) int {\n\tfor n > 9 {\n\t\tn = sumOfDigits(n)\n\t}\n\treturn n\n}\n\nfunc sumOfDigits(n int) int {\n\tvar sum int\n\tfor n > 0 {\n\t\tsum += n % 10\n\t\tn /= 10\n\t}\n\treturn sum\n}\n\n</code></pre>\n<pre><code>// Write a programme for Digital Root of a number\n\nfunction digital_root(n) {\n  if (n === 0) {\n    return 0;\n  } else {\n    return 1 + ((n - 1) % 9);\n  }\n}\n\nlet num = prompt(\"Enter Number : \");\nconsole.log(\"Digital Root :\", digital_root(num));\n\n</code></pre>\n","markdown":"\n## Write a programme for Digital Root of a number\n\n`Digital Root` is the single number obtained by adding the number successively.\n\n```txt\n347 = 3 + 4 + 7 = 14\n14 = 1 + 4 = 5\n```\n\nThus, 5 is a single digit number, which is the digital root/ seed number of 347.\n\n```txt\nInput  : 347\nOutput : 5\n```\n\n---\n\n\n<CodeBlock>\n        \n```c\n// Write a programme for Digital Root of a number\n#include <stdio.h>\n\nint digital_root(int n)\n{\n    if (n == 0)\n        return 0;\n    else\n    {\n        return 1 + ((n - 1) % 9);\n    }\n}\n\nint main()\n{\n    int n;\n    printf(\"Enter Number : \");\n    scanf(\"%d\", &n);\n    int ans = digital_root(n);\n    printf(\"\\n\");\n    printf(\"Digital Root Value : %d\\n\", ans);\n    return 0;\n}\n\n```\n                \n```java\n// Converts a number to its digital root\n// The digital root of a number is defined as the sum of each digit defining the original number\n// example 127 -> 1 + 2 + 7 -> 10\n//          10 -> 1 + 0 -> 1\n\nimport java.util.Scanner;\n\npublic class DigitalRoot {\n\n  public static void convert(int a) {\n    // Ramans formula for calcuating the digital root\n    System.out.println(1 + (a - 1) % 9);\n  }\n\n  public static void main(String[] args) {\n    int a = 0;\n    Scanner sc = new Scanner(System.in);\n    System.out.print(\"Input  : \");\n    a = sc.nextInt();\n    System.out.print(\"\\nThe digital root is : \");\n    convert(a);\n    sc.close();\n  }\n}\n\n```\n                \n```cs\n// Write a programme for Digital Root of a number\nusing System;\n\npublic class DigitalRoot\n{\n    public static void Main(string[] args)\n    {\n        Console.Write(\"Input  : \");\n        int num;\n        if (int.TryParse(Console.ReadLine(), out num))\n        {\n            Console.WriteLine(\"\\nOutput : {0}\", Convert(num));\n        }\n        else\n        {\n            Console.WriteLine(\"Input Err\");\n        }\n    }\n\n    public static int Convert(int n)\n    {\n        if (n == 0) return 0;\n\n        return 1 + ((n - 1) % 9);\n    }\n}\n\n```\n                \n```python\n# Write a programme for Digital Root of a number\n\ndef digital_root(n):\n    if n == 0:\n        return 0\n    else:\n        return 1 + ((n-1) % 9)\n\n\nn = int(input(\"Enter Number : \"))\nprint(\"Digital Root :\", digital_root(n))\n\n```\n                \n```cpp\n// Write a programme for Digital Root of a number\n#include <iostream>\n\nusing namespace std;\n\nint digital_root(int n)\n{\n    if (n == 0)\n        return 0;\n    else\n    {\n        return 1 + ((n - 1) % 9);\n    }\n}\n\nint main()\n{\n    int n;\n    cout << \"Enter Number : \";\n    cin >> n;\n    cout << endl;\n    cout << \"Digital Root Value : \" << digital_root(n) << endl;\n    return 0;\n}\n\n```\n                \n```go\n// Write a programme for Digital Root of a number\n// digital root is the sum of the digits of a number\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar n int\n\tfmt.Print(\"Enter the number : \")\n\tfmt.Scan(&n)\n\tfmt.Println(\"The digital root of the number is :\", digitalRoot(n))\n}\n\nfunc digitalRoot(n int) int {\n\tfor n > 9 {\n\t\tn = sumOfDigits(n)\n\t}\n\treturn n\n}\n\nfunc sumOfDigits(n int) int {\n\tvar sum int\n\tfor n > 0 {\n\t\tsum += n % 10\n\t\tn /= 10\n\t}\n\treturn sum\n}\n\n```\n                \n```js\n// Write a programme for Digital Root of a number\n\nfunction digital_root(n) {\n  if (n === 0) {\n    return 0;\n  } else {\n    return 1 + ((n - 1) % 9);\n  }\n}\n\nlet num = prompt(\"Enter Number : \");\nconsole.log(\"Digital Root :\", digital_root(num));\n\n```\n                \n</CodeBlock>\n          \n        "}