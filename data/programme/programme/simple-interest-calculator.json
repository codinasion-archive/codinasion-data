{"slug":"simple-interest-calculator","title":"Simple Interest Calculator","description":"Write a programme to calculate simple interest","tags":["cs","java","c","cpp","py"],"contributors":["Anzo52","Zuquim","ClasherKasten","rossilor95"],"latestUpdateDate":"2022-06-11T09:21:28Z","contentHtml":"<h2>Write a programme to calculate simple interest</h2>\n<pre><code>Enter P : 5000\nEnter T : 10\nEnter R : 5\n\nSimple Interest : 2500\n</code></pre>\n<hr>\n<pre><code>import java.util.Scanner;\n\npublic class SimpleInterestCalculator {\n\n    public static int interestCalculator(int principle, int time, int rate) {\n        int interest = (principle * time * rate) / 100;\n        return interest;\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter P : \");\n        int principle = sc.nextInt();\n        System.out.print(\"Enter T : \");\n        int time = sc.nextInt();\n        System.out.print(\"Enter R : \");\n        int rate = sc.nextInt();\n        int interest = interestCalculator(principle, time, rate);\n        System.out.println(\"\\nSimple interest: \" + interest);\n        sc.close();\n    }\n}\n</code></pre>\n<pre><code>p = int(input(\"Enter P : \"))\nt = int(input(\"Enter T : \"))\nr = int(input(\"Enter R : \"))\n\nprint(f\"\\nSimple Interest : {p * t * r / 100}\")\n</code></pre>\n<pre><code>#include &#x3C;stdio.h>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    printf(\"Enter P : \");\n    scanf(\"%d\", &#x26;p);\n    printf(\"Enter R : \");\n    scanf(\"%d\", &#x26;r);\n    printf(\"Enter T : \");\n    scanf(\"%d\", &#x26;t);\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    std::cout &#x3C;&#x3C; \"Enter P : \";\n    std::cin >> p;\n    std::cout &#x3C;&#x3C; \"Enter R : \";\n    std::cin >> r;\n    std::cout &#x3C;&#x3C; \"Enter T : \";\n    std::cin >> t;\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n</code></pre>\n<pre><code>using System;\n\nnamespace Calculations\n{\n    public class SimpleInterestCalculator\n    {\n        public static decimal\n        CalculateInterest(\n            decimal principalAmount,\n            int time,\n            int percentageInterestRate\n        )\n        {\n            float decimalInterestRate = percentageInterestRate / 100f;\n            return principalAmount * (decimal)(time * decimalInterestRate);\n        }\n\n        public static decimal GetDecimalInput(string instructions)\n        {\n            bool isInputValid;\n            decimal inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid =\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static int GetIntInput(string instructions)\n        {\n            bool isInputValid;\n            int inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid = int.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static void Main()\n        {\n            decimal principalAmount = GetDecimalInput(\"Enter P : \");\n            int time = GetIntInput(\"Enter T : \");\n            int percentageInterestRate = GetIntInput(\"Enter R : \");\n\n            decimal interestAmount =\n                CalculateInterest(principalAmount,\n                time,\n                percentageInterestRate);\n            Console\n                .WriteLine(\"\\nSimple interest : \" +\n                Math.Round(interestAmount, 2));\n        }\n    }\n}\n</code></pre>\n<pre><code>// Write a programme to calculate simple interest\r\nusing System;\r\n\r\nnamespace Calculations\r\n{\r\n    public class SimpleInterestCalculator\r\n    {\r\n        public static decimal\r\n        CalculateInterest(\r\n            decimal principalAmount,\r\n            int time,\r\n            int percentageInterestRate\r\n        )\r\n        {\r\n            float decimalInterestRate = percentageInterestRate / 100f;\r\n            return principalAmount * (decimal)(time * decimalInterestRate);\r\n        }\r\n\r\n        public static decimal GetDecimalInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            decimal inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid =\r\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static int GetIntInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            int inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid = int.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            decimal principalAmount = GetDecimalInput(\"Enter P : \");\r\n            int time = GetIntInput(\"Enter T : \");\r\n            int percentageInterestRate = GetIntInput(\"Enter R : \");\r\n\r\n            decimal interestAmount =\r\n                CalculateInterest(principalAmount,\r\n                time,\r\n                percentageInterestRate);\r\n            Console\r\n                .WriteLine(\"\\nSimple interest : \" +\r\n                Math.Round(interestAmount, 2));\r\n        }\r\n    }\r\n}\r\n\n</code></pre>\n<pre><code>// Write a programme to calculate simple interest\n\n#include &#x3C;stdio.h>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    printf(\"Enter P : \");\n    scanf(\"%d\", &#x26;p);\n    printf(\"Enter R : \");\n    scanf(\"%d\", &#x26;r);\n    printf(\"Enter T : \");\n    scanf(\"%d\", &#x26;t);\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n\n</code></pre>\n<pre><code># Write a programme to calculate simple interest\n\np = int(input(\"Enter P : \"))\nt = int(input(\"Enter T : \"))\nr = int(input(\"Enter R : \"))\n\nprint(f\"\\nSimple Interest : {p * t * r / 100}\")\n\n</code></pre>\n<pre><code>// Write a programme to calculate simple interest\n\n#include &#x3C;iostream>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    std::cout &#x3C;&#x3C; \"Enter P : \";\n    std::cin >> p;\n    std::cout &#x3C;&#x3C; \"Enter R : \";\n    std::cin >> r;\n    std::cout &#x3C;&#x3C; \"Enter T : \";\n    std::cin >> t;\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n\n</code></pre>\n<pre><code>// Write a programme to calculate simple interest\n\nimport java.util.Scanner;\n\npublic class SimpleInterestCalculator {\n\n    public static int interestCalculator(int principle, int time, int rate) {\n        int interest = (principle * time * rate) / 100;\n        return interest;\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter P : \");\n        int principle = sc.nextInt();\n        System.out.print(\"Enter T : \");\n        int time = sc.nextInt();\n        System.out.print(\"Enter R : \");\n        int rate = sc.nextInt();\n        int interest = interestCalculator(principle, time, rate);\n        System.out.println(\"\\nSimple interest: \" + interest);\n        sc.close();\n    }\n}\n\n</code></pre>\n","markdown":"\n## Write a programme to calculate simple interest\n\n```txt\nEnter P : 5000\nEnter T : 10\nEnter R : 5\n\nSimple Interest : 2500\n```\n\n---\n\n<CodeBlock>\n\n```java\nimport java.util.Scanner;\n\npublic class SimpleInterestCalculator {\n\n    public static int interestCalculator(int principle, int time, int rate) {\n        int interest = (principle * time * rate) / 100;\n        return interest;\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter P : \");\n        int principle = sc.nextInt();\n        System.out.print(\"Enter T : \");\n        int time = sc.nextInt();\n        System.out.print(\"Enter R : \");\n        int rate = sc.nextInt();\n        int interest = interestCalculator(principle, time, rate);\n        System.out.println(\"\\nSimple interest: \" + interest);\n        sc.close();\n    }\n}\n```\n\n```python\np = int(input(\"Enter P : \"))\nt = int(input(\"Enter T : \"))\nr = int(input(\"Enter R : \"))\n\nprint(f\"\\nSimple Interest : {p * t * r / 100}\")\n```\n\n```c\n#include <stdio.h>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    printf(\"Enter P : \");\n    scanf(\"%d\", &p);\n    printf(\"Enter R : \");\n    scanf(\"%d\", &r);\n    printf(\"Enter T : \");\n    scanf(\"%d\", &t);\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n```\n\n```cpp\n#include <iostream>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    std::cout << \"Enter P : \";\n    std::cin >> p;\n    std::cout << \"Enter R : \";\n    std::cin >> r;\n    std::cout << \"Enter T : \";\n    std::cin >> t;\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n```\n\n```cs\nusing System;\n\nnamespace Calculations\n{\n    public class SimpleInterestCalculator\n    {\n        public static decimal\n        CalculateInterest(\n            decimal principalAmount,\n            int time,\n            int percentageInterestRate\n        )\n        {\n            float decimalInterestRate = percentageInterestRate / 100f;\n            return principalAmount * (decimal)(time * decimalInterestRate);\n        }\n\n        public static decimal GetDecimalInput(string instructions)\n        {\n            bool isInputValid;\n            decimal inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid =\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static int GetIntInput(string instructions)\n        {\n            bool isInputValid;\n            int inputValue;\n\n            do\n            {\n                Console.Write (instructions);\n                isInputValid = int.TryParse(Console.ReadLine(), out inputValue);\n            }\n            while (!isInputValid);\n\n            return inputValue;\n        }\n\n        public static void Main()\n        {\n            decimal principalAmount = GetDecimalInput(\"Enter P : \");\n            int time = GetIntInput(\"Enter T : \");\n            int percentageInterestRate = GetIntInput(\"Enter R : \");\n\n            decimal interestAmount =\n                CalculateInterest(principalAmount,\n                time,\n                percentageInterestRate);\n            Console\n                .WriteLine(\"\\nSimple interest : \" +\n                Math.Round(interestAmount, 2));\n        }\n    }\n}\n```\n\n</CodeBlock>\n\n\n<CodeBlock>\n        \n```cs\n// Write a programme to calculate simple interest\r\nusing System;\r\n\r\nnamespace Calculations\r\n{\r\n    public class SimpleInterestCalculator\r\n    {\r\n        public static decimal\r\n        CalculateInterest(\r\n            decimal principalAmount,\r\n            int time,\r\n            int percentageInterestRate\r\n        )\r\n        {\r\n            float decimalInterestRate = percentageInterestRate / 100f;\r\n            return principalAmount * (decimal)(time * decimalInterestRate);\r\n        }\r\n\r\n        public static decimal GetDecimalInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            decimal inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid =\r\n                    decimal.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static int GetIntInput(string instructions)\r\n        {\r\n            bool isInputValid;\r\n            int inputValue;\r\n\r\n            do\r\n            {\r\n                Console.Write (instructions);\r\n                isInputValid = int.TryParse(Console.ReadLine(), out inputValue);\r\n            }\r\n            while (!isInputValid);\r\n\r\n            return inputValue;\r\n        }\r\n\r\n        public static void Main()\r\n        {\r\n            decimal principalAmount = GetDecimalInput(\"Enter P : \");\r\n            int time = GetIntInput(\"Enter T : \");\r\n            int percentageInterestRate = GetIntInput(\"Enter R : \");\r\n\r\n            decimal interestAmount =\r\n                CalculateInterest(principalAmount,\r\n                time,\r\n                percentageInterestRate);\r\n            Console\r\n                .WriteLine(\"\\nSimple interest : \" +\r\n                Math.Round(interestAmount, 2));\r\n        }\r\n    }\r\n}\r\n\n```\n                \n```c\n// Write a programme to calculate simple interest\n\n#include <stdio.h>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    printf(\"Enter P : \");\n    scanf(\"%d\", &p);\n    printf(\"Enter R : \");\n    scanf(\"%d\", &r);\n    printf(\"Enter T : \");\n    scanf(\"%d\", &t);\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n\n```\n                \n```python\n# Write a programme to calculate simple interest\n\np = int(input(\"Enter P : \"))\nt = int(input(\"Enter T : \"))\nr = int(input(\"Enter R : \"))\n\nprint(f\"\\nSimple Interest : {p * t * r / 100}\")\n\n```\n                \n```cpp\n// Write a programme to calculate simple interest\n\n#include <iostream>\n\nint simple_interest(int p, int t, int r)\n{\n    return (int)(p * t * r / 100);\n}\n\nint main(void)\n{\n    int p, t, r;\n    std::cout << \"Enter P : \";\n    std::cin >> p;\n    std::cout << \"Enter R : \";\n    std::cin >> r;\n    std::cout << \"Enter T : \";\n    std::cin >> t;\n    printf(\"\\nSimple Interest : %d\\n\", simple_interest(p, t, r));\n    return 0;\n}\n\n```\n                \n```java\n// Write a programme to calculate simple interest\n\nimport java.util.Scanner;\n\npublic class SimpleInterestCalculator {\n\n    public static int interestCalculator(int principle, int time, int rate) {\n        int interest = (principle * time * rate) / 100;\n        return interest;\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        System.out.print(\"Enter P : \");\n        int principle = sc.nextInt();\n        System.out.print(\"Enter T : \");\n        int time = sc.nextInt();\n        System.out.print(\"Enter R : \");\n        int rate = sc.nextInt();\n        int interest = interestCalculator(principle, time, rate);\n        System.out.println(\"\\nSimple interest: \" + interest);\n        sc.close();\n    }\n}\n\n```\n                \n</CodeBlock>\n          \n        "}